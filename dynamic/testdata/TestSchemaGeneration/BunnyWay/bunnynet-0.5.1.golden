{
    "name": "bunnynet",
    "version": "0.5.1",
    "description": "A Pulumi provider dynamically bridged from bunnynet.",
    "attribution": "This Pulumi package is based on the [`bunnynet` Terraform Provider](https://github.com/bunnyway/terraform-provider-bunnynet).",
    "repository": "https://github.com/bunnyway/terraform-provider-bunnynet",
    "publisher": "bunnyway",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "liftSingleValueMethodReturns": true,
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-terraform-provider/sdks/go/bunnynet/bunnynet",
            "rootPackageName": "bunnynet",
            "liftSingleValueMethodReturns": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "java": {
            "basePackage": "",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageDescription": "A Pulumi provider dynamically bridged from bunnynet.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/bunnyway/terraform-provider-bunnynet)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e please consult the source [`terraform-provider-bunnynet` repo](https://github.com/bunnyway/terraform-provider-bunnynet/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "liftSingleValueMethodReturns": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/bunnyway/terraform-provider-bunnynet)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e please consult the source [`terraform-provider-bunnynet` repo](https://github.com/bunnyway/terraform-provider-bunnynet/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "API key. Can also be set using the `BUNNYNET_API_KEY` environment variable."
            },
            "apiUrl": {
                "type": "string",
                "description": "Optional. The API URL. Defaults to `https://api.bunny.net`."
            },
            "streamApiUrl": {
                "type": "string",
                "description": "Optional. The Stream API URL. Defaults to `https://video.bunnycdn.com`."
            }
        }
    },
    "types": {
        "bunnynet:index/PullzoneEdgeruleAction:PullzoneEdgeruleAction": {
            "properties": {
                "parameter1": {
                    "type": "string"
                },
                "parameter2": {
                    "type": "string"
                },
                "parameter3": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "parameter1",
                "parameter2",
                "parameter3",
                "type"
            ]
        },
        "bunnynet:index/PullzoneEdgeruleTrigger:PullzoneEdgeruleTrigger": {
            "properties": {
                "matchType": {
                    "type": "string"
                },
                "parameter1": {
                    "type": "string"
                },
                "parameter2": {
                    "type": "string"
                },
                "patterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "matchType",
                "parameter1",
                "parameter2",
                "patterns",
                "type"
            ]
        },
        "bunnynet:index/PullzoneOrigin:PullzoneOrigin": {
            "properties": {
                "followRedirects": {
                    "type": "boolean",
                    "description": "Indicates whether the zone will follow origin redirects.\n"
                },
                "forwardHostHeader": {
                    "type": "boolean",
                    "description": "Indicates whether the current hostname is forwarded to the origin.\n"
                },
                "hostHeader": {
                    "type": "string",
                    "description": "The host header that will be sent to the origin.\n"
                },
                "middlewareScript": {
                    "type": "number",
                    "description": "The ID of the compute script used as a middleware.\n"
                },
                "script": {
                    "type": "number",
                    "description": "The ID of the linked compute script.\n"
                },
                "storagezone": {
                    "type": "number",
                    "description": "The ID of the linked storage zone.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Options: `ComputeScript`, `DnsAccelerate`, `OriginUrl`, `StorageZone`\n"
                },
                "url": {
                    "type": "string",
                    "description": "The origin URL from where the files are fetched.\n"
                },
                "verifySsl": {
                    "type": "boolean",
                    "description": "Indicates whether the Origin's TLS certificate should be verified.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "followRedirects",
                        "forwardHostHeader",
                        "hostHeader",
                        "middlewareScript",
                        "type",
                        "verifySsl"
                    ]
                }
            }
        },
        "bunnynet:index/PullzoneRouting:PullzoneRouting": {
            "properties": {
                "blockedCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of blocked countries with the two-letter Alpha2 ISO codes. Traffic connecting from a blocked country will be rejected on the DNS level.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eu`\" pulumi-lang-dotnet=\"`Eu`\" pulumi-lang-go=\"`eu`\" pulumi-lang-python=\"`eu`\" pulumi-lang-yaml=\"`eu`\" pulumi-lang-java=\"`eu`\"\u003e`eu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`scripting`\" pulumi-lang-dotnet=\"`Scripting`\" pulumi-lang-go=\"`scripting`\" pulumi-lang-python=\"`scripting`\" pulumi-lang-yaml=\"`scripting`\" pulumi-lang-java=\"`scripting`\"\u003e`scripting`\u003c/span\u003e\n"
                },
                "redirectedCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of budget redirected countries with the two-letter Alpha2 ISO codes. Traffic from a redirected country will connect to the cheapest possible node in North America or Europe.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "Options: `Standard`, `Volume`\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: `AF`, `ASIA`, `EU`, `SA`, `US`\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "blockedCountries",
                        "filters",
                        "redirectedCountries",
                        "tier",
                        "zones"
                    ]
                }
            }
        },
        "bunnynet:index/StreamVideoChapter:StreamVideoChapter": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start",
                "title"
            ]
        },
        "bunnynet:index/StreamVideoMoment:StreamVideoMoment": {
            "properties": {
                "label": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "label",
                "timestamp"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the bunnynet package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "API key. Can also be set using the `BUNNYNET_API_KEY` environment variable."
            },
            "apiUrl": {
                "type": "string",
                "description": "Optional. The API URL. Defaults to `https://api.bunny.net`."
            },
            "streamApiUrl": {
                "type": "string",
                "description": "Optional. The Stream API URL. Defaults to `https://video.bunnycdn.com`."
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "API key. Can also be set using the `BUNNYNET_API_KEY` environment variable."
            },
            "apiUrl": {
                "type": "string",
                "description": "Optional. The API URL. Defaults to `https://api.bunny.net`."
            },
            "streamApiUrl": {
                "type": "string",
                "description": "Optional. The Stream API URL. Defaults to `https://video.bunnycdn.com`."
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:bunnynet/terraformConfig"
        }
    },
    "resources": {
        "bunnynet:index/computeScript:ComputeScript": {
            "properties": {
                "computeScriptId": {
                    "type": "number",
                    "description": "The ID of the script."
                },
                "content": {
                    "type": "string",
                    "description": "The code of the script."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the script."
                },
                "type": {
                    "type": "string",
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`middleware`\" pulumi-lang-dotnet=\"`Middleware`\" pulumi-lang-go=\"`middleware`\" pulumi-lang-python=\"`middleware`\" pulumi-lang-yaml=\"`middleware`\" pulumi-lang-java=\"`middleware`\"\u003e`middleware`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standalone`\" pulumi-lang-dotnet=\"`Standalone`\" pulumi-lang-go=\"`standalone`\" pulumi-lang-python=\"`standalone`\" pulumi-lang-yaml=\"`standalone`\" pulumi-lang-java=\"`standalone`\"\u003e`standalone`\u003c/span\u003e"
                }
            },
            "required": [
                "content",
                "computeScriptId",
                "name",
                "type"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The code of the script."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the script."
                },
                "type": {
                    "type": "string",
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`middleware`\" pulumi-lang-dotnet=\"`Middleware`\" pulumi-lang-go=\"`middleware`\" pulumi-lang-python=\"`middleware`\" pulumi-lang-yaml=\"`middleware`\" pulumi-lang-java=\"`middleware`\"\u003e`middleware`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standalone`\" pulumi-lang-dotnet=\"`Standalone`\" pulumi-lang-go=\"`standalone`\" pulumi-lang-python=\"`standalone`\" pulumi-lang-yaml=\"`standalone`\" pulumi-lang-java=\"`standalone`\"\u003e`standalone`\u003c/span\u003e"
                }
            },
            "requiredInputs": [
                "content",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeScript resources.\n",
                "properties": {
                    "computeScriptId": {
                        "type": "number",
                        "description": "The ID of the script."
                    },
                    "content": {
                        "type": "string",
                        "description": "The code of the script."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the script."
                    },
                    "type": {
                        "type": "string",
                        "description": "Options: \u003cspan pulumi-lang-nodejs=\"`middleware`\" pulumi-lang-dotnet=\"`Middleware`\" pulumi-lang-go=\"`middleware`\" pulumi-lang-python=\"`middleware`\" pulumi-lang-yaml=\"`middleware`\" pulumi-lang-java=\"`middleware`\"\u003e`middleware`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`standalone`\" pulumi-lang-dotnet=\"`Standalone`\" pulumi-lang-go=\"`standalone`\" pulumi-lang-python=\"`standalone`\" pulumi-lang-yaml=\"`standalone`\" pulumi-lang-java=\"`standalone`\"\u003e`standalone`\u003c/span\u003e"
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/computeScriptVariable:ComputeScriptVariable": {
            "properties": {
                "computeScriptVariableId": {
                    "type": "number",
                    "description": "The ID of the environment variable."
                },
                "defaultValue": {
                    "type": "string",
                    "description": "The default value of the environment variable."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment variable."
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates whether the environment variable is required."
                },
                "script": {
                    "type": "number",
                    "description": "The ID of the associated compute script."
                }
            },
            "required": [
                "defaultValue",
                "computeScriptVariableId",
                "name",
                "required",
                "script"
            ],
            "inputProperties": {
                "defaultValue": {
                    "type": "string",
                    "description": "The default value of the environment variable."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment variable."
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates whether the environment variable is required."
                },
                "script": {
                    "type": "number",
                    "description": "The ID of the associated compute script."
                }
            },
            "requiredInputs": [
                "defaultValue",
                "required",
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ComputeScriptVariable resources.\n",
                "properties": {
                    "computeScriptVariableId": {
                        "type": "number",
                        "description": "The ID of the environment variable."
                    },
                    "defaultValue": {
                        "type": "string",
                        "description": "The default value of the environment variable."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the environment variable."
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Indicates whether the environment variable is required."
                    },
                    "script": {
                        "type": "number",
                        "description": "The ID of the associated compute script."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/dnsRecord:DnsRecord": {
            "properties": {
                "accelerated": {
                    "type": "boolean",
                    "description": "Indicates whether the DNS record should utilize bunny.net’s acceleration services."
                },
                "acceleratedPullzone": {
                    "type": "number",
                    "description": "The ID of the accelerated pull zone."
                },
                "comment": {
                    "type": "string",
                    "description": "This property allows users to add descriptive notes for documentation and management purposes."
                },
                "dnsRecordId": {
                    "type": "number",
                    "description": "The unique identifier for the DNS record."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the DNS record is enabled."
                },
                "flags": {
                    "type": "number",
                    "description": "Flags for advanced DNS settings."
                },
                "geolocationLat": {
                    "type": "number",
                    "description": "The latitude for geolocation-based routing."
                },
                "geolocationLong": {
                    "type": "number",
                    "description": "The longitude for geolocation-based routing."
                },
                "latencyZone": {
                    "type": "string",
                    "description": "The latency zone for latency-based routing."
                },
                "linkName": {
                    "type": "string",
                    "description": "The name of the linked resource."
                },
                "monitorType": {
                    "type": "string",
                    "description": "Options: `Http`, `Monitor`, `None`, `Ping`"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the DNS record. Use \u003ccode\u003ename = \"\"\u003c/code\u003e for apex domain records."
                },
                "port": {
                    "type": "number",
                    "description": "The port number for services that require a specific port."
                },
                "priority": {
                    "type": "number",
                    "description": "The priority of the DNS record."
                },
                "smartRoutingType": {
                    "type": "string",
                    "description": "Options: `Geolocation`, `Latency`, `None`"
                },
                "tag": {
                    "type": "string",
                    "description": "A tag for the DNS record."
                },
                "ttl": {
                    "type": "number",
                    "description": "The time-to-live value for the DNS record."
                },
                "type": {
                    "type": "string",
                    "description": "Options: `A`, `AAAA`, `CAA`, `CNAME`, `Flatten`, `MX`, `NS`, `PTR`, `PullZone`, `Redirect`, `SRV`, `Script`, `TXT`"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the DNS record."
                },
                "weight": {
                    "type": "number",
                    "description": "The weight of the DNS record. It is used in load balancing scenarios to distribute traffic based on the specified weight."
                },
                "zone": {
                    "type": "number",
                    "description": "ID of the related DNS zone."
                }
            },
            "required": [
                "accelerated",
                "acceleratedPullzone",
                "comment",
                "enabled",
                "flags",
                "geolocationLat",
                "geolocationLong",
                "dnsRecordId",
                "latencyZone",
                "linkName",
                "monitorType",
                "name",
                "port",
                "priority",
                "smartRoutingType",
                "tag",
                "ttl",
                "type",
                "value",
                "weight",
                "zone"
            ],
            "inputProperties": {
                "accelerated": {
                    "type": "boolean",
                    "description": "Indicates whether the DNS record should utilize bunny.net’s acceleration services."
                },
                "comment": {
                    "type": "string",
                    "description": "This property allows users to add descriptive notes for documentation and management purposes."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the DNS record is enabled."
                },
                "flags": {
                    "type": "number",
                    "description": "Flags for advanced DNS settings."
                },
                "geolocationLat": {
                    "type": "number",
                    "description": "The latitude for geolocation-based routing."
                },
                "geolocationLong": {
                    "type": "number",
                    "description": "The longitude for geolocation-based routing."
                },
                "latencyZone": {
                    "type": "string",
                    "description": "The latency zone for latency-based routing."
                },
                "linkName": {
                    "type": "string",
                    "description": "The name of the linked resource."
                },
                "monitorType": {
                    "type": "string",
                    "description": "Options: `Http`, `Monitor`, `None`, `Ping`"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the DNS record. Use \u003ccode\u003ename = \"\"\u003c/code\u003e for apex domain records."
                },
                "port": {
                    "type": "number",
                    "description": "The port number for services that require a specific port."
                },
                "priority": {
                    "type": "number",
                    "description": "The priority of the DNS record."
                },
                "smartRoutingType": {
                    "type": "string",
                    "description": "Options: `Geolocation`, `Latency`, `None`"
                },
                "tag": {
                    "type": "string",
                    "description": "A tag for the DNS record."
                },
                "ttl": {
                    "type": "number",
                    "description": "The time-to-live value for the DNS record."
                },
                "type": {
                    "type": "string",
                    "description": "Options: `A`, `AAAA`, `CAA`, `CNAME`, `Flatten`, `MX`, `NS`, `PTR`, `PullZone`, `Redirect`, `SRV`, `Script`, `TXT`"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the DNS record."
                },
                "weight": {
                    "type": "number",
                    "description": "The weight of the DNS record. It is used in load balancing scenarios to distribute traffic based on the specified weight."
                },
                "zone": {
                    "type": "number",
                    "description": "ID of the related DNS zone."
                }
            },
            "requiredInputs": [
                "type",
                "value",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "accelerated": {
                        "type": "boolean",
                        "description": "Indicates whether the DNS record should utilize bunny.net’s acceleration services."
                    },
                    "acceleratedPullzone": {
                        "type": "number",
                        "description": "The ID of the accelerated pull zone."
                    },
                    "comment": {
                        "type": "string",
                        "description": "This property allows users to add descriptive notes for documentation and management purposes."
                    },
                    "dnsRecordId": {
                        "type": "number",
                        "description": "The unique identifier for the DNS record."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether the DNS record is enabled."
                    },
                    "flags": {
                        "type": "number",
                        "description": "Flags for advanced DNS settings."
                    },
                    "geolocationLat": {
                        "type": "number",
                        "description": "The latitude for geolocation-based routing."
                    },
                    "geolocationLong": {
                        "type": "number",
                        "description": "The longitude for geolocation-based routing."
                    },
                    "latencyZone": {
                        "type": "string",
                        "description": "The latency zone for latency-based routing."
                    },
                    "linkName": {
                        "type": "string",
                        "description": "The name of the linked resource."
                    },
                    "monitorType": {
                        "type": "string",
                        "description": "Options: `Http`, `Monitor`, `None`, `Ping`"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the DNS record. Use \u003ccode\u003ename = \"\"\u003c/code\u003e for apex domain records."
                    },
                    "port": {
                        "type": "number",
                        "description": "The port number for services that require a specific port."
                    },
                    "priority": {
                        "type": "number",
                        "description": "The priority of the DNS record."
                    },
                    "smartRoutingType": {
                        "type": "string",
                        "description": "Options: `Geolocation`, `Latency`, `None`"
                    },
                    "tag": {
                        "type": "string",
                        "description": "A tag for the DNS record."
                    },
                    "ttl": {
                        "type": "number",
                        "description": "The time-to-live value for the DNS record."
                    },
                    "type": {
                        "type": "string",
                        "description": "Options: `A`, `AAAA`, `CAA`, `CNAME`, `Flatten`, `MX`, `NS`, `PTR`, `PullZone`, `Redirect`, `SRV`, `Script`, `TXT`"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the DNS record."
                    },
                    "weight": {
                        "type": "number",
                        "description": "The weight of the DNS record. It is used in load balancing scenarios to distribute traffic based on the specified weight."
                    },
                    "zone": {
                        "type": "number",
                        "description": "ID of the related DNS zone."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/dnsZone:DnsZone": {
            "properties": {
                "dnsZoneId": {
                    "type": "number",
                    "description": "The unique identifier for the DNS zone."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name for the DNS zone."
                },
                "logAnonymized": {
                    "type": "boolean",
                    "description": "Indicates whether DNS logs are anonymized."
                },
                "logAnonymizedStyle": {
                    "type": "string",
                    "description": "Options: `Drop`, `OneDigit`"
                },
                "logEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether permanent logging for DNS queries is enabled."
                },
                "nameserver1": {
                    "type": "string",
                    "description": "The primary nameserver for the DNS zone."
                },
                "nameserver2": {
                    "type": "string",
                    "description": "The secondary nameserver for the DNS zone."
                },
                "nameserverCustom": {
                    "type": "boolean",
                    "description": "Indicates whether custom nameservers are used."
                },
                "soaEmail": {
                    "type": "string",
                    "description": "The email address used in the Start of Authority (SOA) record for the DNS zone."
                }
            },
            "required": [
                "domain",
                "dnsZoneId",
                "logAnonymized",
                "logAnonymizedStyle",
                "logEnabled",
                "nameserver1",
                "nameserver2",
                "nameserverCustom",
                "soaEmail"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "The domain name for the DNS zone."
                },
                "logAnonymized": {
                    "type": "boolean",
                    "description": "Indicates whether DNS logs are anonymized."
                },
                "logAnonymizedStyle": {
                    "type": "string",
                    "description": "Options: `Drop`, `OneDigit`"
                },
                "logEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether permanent logging for DNS queries is enabled."
                },
                "nameserver1": {
                    "type": "string",
                    "description": "The primary nameserver for the DNS zone."
                },
                "nameserver2": {
                    "type": "string",
                    "description": "The secondary nameserver for the DNS zone."
                },
                "nameserverCustom": {
                    "type": "boolean",
                    "description": "Indicates whether custom nameservers are used."
                },
                "soaEmail": {
                    "type": "string",
                    "description": "The email address used in the Start of Authority (SOA) record for the DNS zone."
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "dnsZoneId": {
                        "type": "number",
                        "description": "The unique identifier for the DNS zone."
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain name for the DNS zone."
                    },
                    "logAnonymized": {
                        "type": "boolean",
                        "description": "Indicates whether DNS logs are anonymized."
                    },
                    "logAnonymizedStyle": {
                        "type": "string",
                        "description": "Options: `Drop`, `OneDigit`"
                    },
                    "logEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether permanent logging for DNS queries is enabled."
                    },
                    "nameserver1": {
                        "type": "string",
                        "description": "The primary nameserver for the DNS zone."
                    },
                    "nameserver2": {
                        "type": "string",
                        "description": "The secondary nameserver for the DNS zone."
                    },
                    "nameserverCustom": {
                        "type": "boolean",
                        "description": "Indicates whether custom nameservers are used."
                    },
                    "soaEmail": {
                        "type": "string",
                        "description": "The email address used in the Start of Authority (SOA) record for the DNS zone."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/pullzone:Pullzone": {
            "properties": {
                "addCanonicalHeader": {
                    "type": "boolean",
                    "description": "Indicates whether the Canonical header is added to the responses."
                },
                "allowReferers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of referrer hostnames that are allowed to access the pull zone. Requests containing the header \"Referer: hostname\" that is not on the list will be rejected. If empty, all the referrers are allowed."
                },
                "blockIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IPs that are blocked from accessing the pull zone. Requests coming from the following IPs will be rejected. If empty, all the IPs will be allowed"
                },
                "blockNoReferer": {
                    "type": "boolean",
                    "description": "Indicates whether requests without a referer should be blocked."
                },
                "blockPostRequests": {
                    "type": "boolean",
                    "description": "Indicates whether to block POST requests."
                },
                "blockReferers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of referrer hostnames that are blocked to access the pull zone. Requests containing the header \"Referer: hostname\" that is not on the list will be rejected. If empty, all the referrers are allowed."
                },
                "blockRootPath": {
                    "type": "boolean",
                    "description": "This property indicates whether to block the root path."
                },
                "cacheChunked": {
                    "type": "boolean",
                    "description": "Indicates whether the cache slice (Optimize for video) feature is enabled for the Pull Zone"
                },
                "cacheEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether smart caching is enabled."
                },
                "cacheErrors": {
                    "type": "boolean",
                    "description": "Indicates whether bunny.net should be caching error responses."
                },
                "cacheExpirationTime": {
                    "type": "number",
                    "description": "The override cache time, in seconds."
                },
                "cacheExpirationTimeBrowser": {
                    "type": "number",
                    "description": "The override cache time for the end client, in seconds."
                },
                "cacheStales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`offline`\" pulumi-lang-dotnet=\"`Offline`\" pulumi-lang-go=\"`offline`\" pulumi-lang-python=\"`offline`\" pulumi-lang-yaml=\"`offline`\" pulumi-lang-java=\"`offline`\"\u003e`offline`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`updating`\" pulumi-lang-dotnet=\"`Updating`\" pulumi-lang-go=\"`updating`\" pulumi-lang-python=\"`updating`\" pulumi-lang-yaml=\"`updating`\" pulumi-lang-java=\"`updating`\"\u003e`updating`\u003c/span\u003e"
                },
                "cacheVaries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`avif`\" pulumi-lang-dotnet=\"`Avif`\" pulumi-lang-go=\"`avif`\" pulumi-lang-python=\"`avif`\" pulumi-lang-yaml=\"`avif`\" pulumi-lang-java=\"`avif`\"\u003e`avif`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cookie`\" pulumi-lang-dotnet=\"`Cookie`\" pulumi-lang-go=\"`cookie`\" pulumi-lang-python=\"`cookie`\" pulumi-lang-yaml=\"`cookie`\" pulumi-lang-java=\"`cookie`\"\u003e`cookie`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`country`\" pulumi-lang-dotnet=\"`Country`\" pulumi-lang-go=\"`country`\" pulumi-lang-python=\"`country`\" pulumi-lang-yaml=\"`country`\" pulumi-lang-java=\"`country`\"\u003e`country`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hostname`\" pulumi-lang-dotnet=\"`Hostname`\" pulumi-lang-go=\"`hostname`\" pulumi-lang-python=\"`hostname`\" pulumi-lang-yaml=\"`hostname`\" pulumi-lang-java=\"`hostname`\"\u003e`hostname`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mobile`\" pulumi-lang-dotnet=\"`Mobile`\" pulumi-lang-go=\"`mobile`\" pulumi-lang-python=\"`mobile`\" pulumi-lang-yaml=\"`mobile`\" pulumi-lang-java=\"`mobile`\"\u003e`mobile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`querystring`\" pulumi-lang-dotnet=\"`Querystring`\" pulumi-lang-go=\"`querystring`\" pulumi-lang-python=\"`querystring`\" pulumi-lang-yaml=\"`querystring`\" pulumi-lang-java=\"`querystring`\"\u003e`querystring`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`webp`\" pulumi-lang-dotnet=\"`Webp`\" pulumi-lang-go=\"`webp`\" pulumi-lang-python=\"`webp`\" pulumi-lang-yaml=\"`webp`\" pulumi-lang-java=\"`webp`\"\u003e`webp`\u003c/span\u003e"
                },
                "cacheVaryCookies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of vary parameters that will be used for vary cache by cookie string. If empty, cookie vary will not be used."
                },
                "cacheVaryQuerystrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of vary parameters that will be used for vary cache by query string. If empty, all parameters will be used to construct the key"
                },
                "cdnDomain": {
                    "type": "string",
                    "description": "The CNAME domain of the pull zone for setting up custom hostnames"
                },
                "corsEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether CORS (Cross-Origin Resource Sharing) is enabled."
                },
                "corsExtensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of file extensions for which CORS is enabled."
                },
                "disableLetsencrypt": {
                    "type": "boolean",
                    "description": "If true, the built-in let's encrypt is disabled and requests are passed to the origin."
                },
                "errorpageCustomContent": {
                    "type": "string",
                    "description": "Contains the custom error page code that will be returned."
                },
                "errorpageCustomEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether custom error page code should be enabled."
                },
                "errorpageStatuspageCode": {
                    "type": "string",
                    "description": "The statuspage code that will be used to build the status widget."
                },
                "errorpageStatuspageEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the statuspage widget should be displayed on the error pages."
                },
                "errorpageWhitelabel": {
                    "type": "boolean",
                    "description": "Indicates whether the error pages should be white-labelled or not"
                },
                "limitAfter": {
                    "type": "number",
                    "description": "The amount of data after the rate limit will be activated."
                },
                "limitBandwidth": {
                    "type": "number",
                    "description": "The maximum bandwidth limit in bytes."
                },
                "limitBurst": {
                    "type": "number",
                    "description": "Excessive requests are delayed until their number exceeds the maximum burst size."
                },
                "limitConnections": {
                    "type": "number",
                    "description": "The number of connections limited per IP."
                },
                "limitDownloadSpeed": {
                    "type": "number",
                    "description": "The maximum download speed, in kb/s. Use 0 for unlimited."
                },
                "limitRequests": {
                    "type": "number",
                    "description": "The maximum amount of requests per IP per second."
                },
                "logAnonymized": {
                    "type": "boolean",
                    "description": "Indicates whether logs are anonymized."
                },
                "logAnonymizedStyle": {
                    "type": "string",
                    "description": "Options: `Drop`, `OneDigit`"
                },
                "logEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether logging is enabled."
                },
                "logForwardEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether log forwarding is enabled."
                },
                "logForwardFormat": {
                    "type": "string",
                    "description": "Options: `JSON`, `Plain`"
                },
                "logForwardPort": {
                    "type": "number",
                    "description": "The port number for log forwarding."
                },
                "logForwardProtocol": {
                    "type": "string",
                    "description": "Options: `DataDog`, `TCP`, `TCPEncrypted`, `UDP`"
                },
                "logForwardServer": {
                    "type": "string",
                    "description": "The server address for log forwarding."
                },
                "logForwardToken": {
                    "type": "string",
                    "description": "The token used for log forwarding authentication."
                },
                "logStorageEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether log storage is enabled."
                },
                "logStorageZone": {
                    "type": "number",
                    "description": "The storage zone ID for log storage."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the pull zone."
                },
                "optimizerClassesForce": {
                    "type": "boolean",
                    "description": "Indicates whether the optimizer class list should be enforced."
                },
                "optimizerDynamicImageApi": {
                    "type": "boolean",
                    "description": "Indicates whether the image manipulation should be enabled."
                },
                "optimizerEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether Bunny Optimizer should be enabled."
                },
                "optimizerMinifyCss": {
                    "type": "boolean",
                    "description": "Indicates whether the CSS minifcation should be enabled."
                },
                "optimizerMinifyJs": {
                    "type": "boolean",
                    "description": "Indicates whether the JavaScript minifcation should be enabled."
                },
                "optimizerSmartimage": {
                    "type": "boolean",
                    "description": "Indicates whether the automatic image optimization should be enabled."
                },
                "optimizerSmartimageDesktopMaxwidth": {
                    "type": "number",
                    "description": "The maximum automatic image size for desktop clients."
                },
                "optimizerSmartimageDesktopQuality": {
                    "type": "number",
                    "description": "The image quality for desktop clients."
                },
                "optimizerSmartimageMobileMaxwidth": {
                    "type": "number",
                    "description": "The maximum automatic image size for mobile clients."
                },
                "optimizerSmartimageMobileQuality": {
                    "type": "number",
                    "description": "Determines the image quality for mobile clients"
                },
                "optimizerWatermark": {
                    "type": "boolean",
                    "description": "Indicates whether image watermarking should be enabled."
                },
                "optimizerWatermarkBorderoffset": {
                    "type": "number",
                    "description": "The offset of the watermark image."
                },
                "optimizerWatermarkMinsize": {
                    "type": "number",
                    "description": "The minimum image size to which the watermark will be added."
                },
                "optimizerWatermarkPosition": {
                    "type": "string",
                    "description": "Options: `BottomLeft`, `BottomRight`, `Center`, `CenterStretch`, `TopLeft`, `TopRight`"
                },
                "optimizerWatermarkUrl": {
                    "type": "string",
                    "description": "The URL of the watermark image."
                },
                "optimizerWebp": {
                    "type": "boolean",
                    "description": "Indicates whether the WebP optimization should be enabled."
                },
                "origin": {
                    "$ref": "#/types/bunnynet:index/PullzoneOrigin:PullzoneOrigin"
                },
                "originshieldConcurrencyLimit": {
                    "type": "boolean",
                    "description": "Indicates whether there is a concurrency limit for Origin Shield."
                },
                "originshieldConcurrencyRequests": {
                    "type": "number",
                    "description": "The number of concurrent requests for Origin Shield."
                },
                "originshieldEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether Origin Shield is enabled."
                },
                "originshieldQueueRequests": {
                    "type": "number",
                    "description": "The number of queued requests for Origin Shield."
                },
                "originshieldQueueWait": {
                    "type": "number",
                    "description": "The maximum wait time for queued requests in Origin Shield, in seconds."
                },
                "originshieldZone": {
                    "type": "string",
                    "description": "Options: `FR`, `IL`"
                },
                "permacacheStoragezone": {
                    "type": "number",
                    "description": "The storage zone ID for Perma-Cache."
                },
                "pullzoneId": {
                    "type": "number",
                    "description": "The unique ID of the pull zone."
                },
                "requestCoalescingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether request coalescing is enabled."
                },
                "requestCoalescingTimeout": {
                    "type": "number",
                    "description": "Specifies the timeout period, in seconds, for request coalescing, determining how long to wait before sending combined requests to the origin."
                },
                "routing": {
                    "$ref": "#/types/bunnynet:index/PullzoneRouting:PullzoneRouting"
                },
                "s3AuthEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether requests to origin will be signed with AWS Signature Version 4."
                },
                "s3AuthKey": {
                    "type": "string",
                    "description": "The access key used to authenticate the requests."
                },
                "s3AuthRegion": {
                    "type": "string",
                    "description": "The region name of the bucket used to authenticate the requests."
                },
                "s3AuthSecret": {
                    "type": "string",
                    "description": "The secret key used to authenticate the requests."
                },
                "safehopConnectionTimeout": {
                    "type": "number",
                    "description": "The amount of seconds to wait when connecting to the origin. Otherwise the request will fail or retry."
                },
                "safehopEnabled": {
                    "type": "boolean"
                },
                "safehopResponseTimeout": {
                    "type": "number",
                    "description": "The amount of seconds to wait when waiting for the origin reply. Otherwise the request will fail or retry."
                },
                "safehopRetryCount": {
                    "type": "number",
                    "description": "The number of retries to the origin server."
                },
                "safehopRetryDelay": {
                    "type": "number",
                    "description": "The amount of time that the CDN should wait before retrying an origin request."
                },
                "safehopRetryReasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: `5xxResponse`, `connectionTimeout`, `responseTimeout`"
                },
                "sortQuerystring": {
                    "type": "boolean",
                    "description": "If enabled, the query parameters will be automatically sorted into a consistent order before checking the cache."
                },
                "stripCookies": {
                    "type": "boolean",
                    "description": "If enabled, bunny.net will strip all the Set-Cookie headers from the HTTP responses."
                },
                "tlsSupports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: `TLSv1.0`, `TLSv1.1`"
                },
                "tokenAuthEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether requests without a valid token and expiry timestamp will be rejected."
                },
                "tokenAuthIpValidation": {
                    "type": "boolean",
                    "description": "Indicates whether the secure hash generated by the server will also include an IP address."
                },
                "tokenAuthKey": {
                    "type": "string",
                    "description": "The auth key used for secure URL token authentication.",
                    "secret": true
                },
                "useBackgroundUpdate": {
                    "type": "boolean",
                    "description": "Indicates whether cache update is performed in the background."
                }
            },
            "required": [
                "addCanonicalHeader",
                "allowReferers",
                "blockIps",
                "blockNoReferer",
                "blockPostRequests",
                "blockReferers",
                "blockRootPath",
                "cacheChunked",
                "cacheEnabled",
                "cacheErrors",
                "cacheExpirationTime",
                "cacheExpirationTimeBrowser",
                "cacheStales",
                "cacheVaries",
                "cacheVaryCookies",
                "cacheVaryQuerystrings",
                "cdnDomain",
                "corsEnabled",
                "corsExtensions",
                "disableLetsencrypt",
                "errorpageCustomContent",
                "errorpageCustomEnabled",
                "errorpageStatuspageCode",
                "errorpageStatuspageEnabled",
                "errorpageWhitelabel",
                "pullzoneId",
                "limitAfter",
                "limitBandwidth",
                "limitBurst",
                "limitConnections",
                "limitDownloadSpeed",
                "limitRequests",
                "logAnonymized",
                "logAnonymizedStyle",
                "logEnabled",
                "logForwardEnabled",
                "logForwardFormat",
                "logForwardPort",
                "logForwardProtocol",
                "logForwardServer",
                "logForwardToken",
                "logStorageEnabled",
                "logStorageZone",
                "name",
                "optimizerClassesForce",
                "optimizerDynamicImageApi",
                "optimizerEnabled",
                "optimizerMinifyCss",
                "optimizerMinifyJs",
                "optimizerSmartimage",
                "optimizerSmartimageDesktopMaxwidth",
                "optimizerSmartimageDesktopQuality",
                "optimizerSmartimageMobileMaxwidth",
                "optimizerSmartimageMobileQuality",
                "optimizerWatermark",
                "optimizerWatermarkBorderoffset",
                "optimizerWatermarkMinsize",
                "optimizerWatermarkPosition",
                "optimizerWatermarkUrl",
                "optimizerWebp",
                "originshieldConcurrencyLimit",
                "originshieldConcurrencyRequests",
                "originshieldEnabled",
                "originshieldQueueRequests",
                "originshieldQueueWait",
                "originshieldZone",
                "permacacheStoragezone",
                "requestCoalescingEnabled",
                "requestCoalescingTimeout",
                "s3AuthEnabled",
                "s3AuthKey",
                "s3AuthRegion",
                "s3AuthSecret",
                "safehopConnectionTimeout",
                "safehopEnabled",
                "safehopResponseTimeout",
                "safehopRetryCount",
                "safehopRetryDelay",
                "safehopRetryReasons",
                "sortQuerystring",
                "stripCookies",
                "tlsSupports",
                "tokenAuthEnabled",
                "tokenAuthIpValidation",
                "tokenAuthKey",
                "useBackgroundUpdate"
            ],
            "inputProperties": {
                "addCanonicalHeader": {
                    "type": "boolean",
                    "description": "Indicates whether the Canonical header is added to the responses."
                },
                "allowReferers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of referrer hostnames that are allowed to access the pull zone. Requests containing the header \"Referer: hostname\" that is not on the list will be rejected. If empty, all the referrers are allowed."
                },
                "blockIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of IPs that are blocked from accessing the pull zone. Requests coming from the following IPs will be rejected. If empty, all the IPs will be allowed"
                },
                "blockNoReferer": {
                    "type": "boolean",
                    "description": "Indicates whether requests without a referer should be blocked."
                },
                "blockPostRequests": {
                    "type": "boolean",
                    "description": "Indicates whether to block POST requests."
                },
                "blockReferers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of referrer hostnames that are blocked to access the pull zone. Requests containing the header \"Referer: hostname\" that is not on the list will be rejected. If empty, all the referrers are allowed."
                },
                "blockRootPath": {
                    "type": "boolean",
                    "description": "This property indicates whether to block the root path."
                },
                "cacheChunked": {
                    "type": "boolean",
                    "description": "Indicates whether the cache slice (Optimize for video) feature is enabled for the Pull Zone"
                },
                "cacheEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether smart caching is enabled."
                },
                "cacheErrors": {
                    "type": "boolean",
                    "description": "Indicates whether bunny.net should be caching error responses."
                },
                "cacheExpirationTime": {
                    "type": "number",
                    "description": "The override cache time, in seconds."
                },
                "cacheExpirationTimeBrowser": {
                    "type": "number",
                    "description": "The override cache time for the end client, in seconds."
                },
                "cacheStales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`offline`\" pulumi-lang-dotnet=\"`Offline`\" pulumi-lang-go=\"`offline`\" pulumi-lang-python=\"`offline`\" pulumi-lang-yaml=\"`offline`\" pulumi-lang-java=\"`offline`\"\u003e`offline`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`updating`\" pulumi-lang-dotnet=\"`Updating`\" pulumi-lang-go=\"`updating`\" pulumi-lang-python=\"`updating`\" pulumi-lang-yaml=\"`updating`\" pulumi-lang-java=\"`updating`\"\u003e`updating`\u003c/span\u003e"
                },
                "cacheVaries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`avif`\" pulumi-lang-dotnet=\"`Avif`\" pulumi-lang-go=\"`avif`\" pulumi-lang-python=\"`avif`\" pulumi-lang-yaml=\"`avif`\" pulumi-lang-java=\"`avif`\"\u003e`avif`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cookie`\" pulumi-lang-dotnet=\"`Cookie`\" pulumi-lang-go=\"`cookie`\" pulumi-lang-python=\"`cookie`\" pulumi-lang-yaml=\"`cookie`\" pulumi-lang-java=\"`cookie`\"\u003e`cookie`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`country`\" pulumi-lang-dotnet=\"`Country`\" pulumi-lang-go=\"`country`\" pulumi-lang-python=\"`country`\" pulumi-lang-yaml=\"`country`\" pulumi-lang-java=\"`country`\"\u003e`country`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hostname`\" pulumi-lang-dotnet=\"`Hostname`\" pulumi-lang-go=\"`hostname`\" pulumi-lang-python=\"`hostname`\" pulumi-lang-yaml=\"`hostname`\" pulumi-lang-java=\"`hostname`\"\u003e`hostname`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mobile`\" pulumi-lang-dotnet=\"`Mobile`\" pulumi-lang-go=\"`mobile`\" pulumi-lang-python=\"`mobile`\" pulumi-lang-yaml=\"`mobile`\" pulumi-lang-java=\"`mobile`\"\u003e`mobile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`querystring`\" pulumi-lang-dotnet=\"`Querystring`\" pulumi-lang-go=\"`querystring`\" pulumi-lang-python=\"`querystring`\" pulumi-lang-yaml=\"`querystring`\" pulumi-lang-java=\"`querystring`\"\u003e`querystring`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`webp`\" pulumi-lang-dotnet=\"`Webp`\" pulumi-lang-go=\"`webp`\" pulumi-lang-python=\"`webp`\" pulumi-lang-yaml=\"`webp`\" pulumi-lang-java=\"`webp`\"\u003e`webp`\u003c/span\u003e"
                },
                "cacheVaryCookies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of vary parameters that will be used for vary cache by cookie string. If empty, cookie vary will not be used."
                },
                "cacheVaryQuerystrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of vary parameters that will be used for vary cache by query string. If empty, all parameters will be used to construct the key"
                },
                "corsEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether CORS (Cross-Origin Resource Sharing) is enabled."
                },
                "corsExtensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of file extensions for which CORS is enabled."
                },
                "disableLetsencrypt": {
                    "type": "boolean",
                    "description": "If true, the built-in let's encrypt is disabled and requests are passed to the origin."
                },
                "errorpageCustomContent": {
                    "type": "string",
                    "description": "Contains the custom error page code that will be returned."
                },
                "errorpageCustomEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether custom error page code should be enabled."
                },
                "errorpageStatuspageCode": {
                    "type": "string",
                    "description": "The statuspage code that will be used to build the status widget."
                },
                "errorpageStatuspageEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the statuspage widget should be displayed on the error pages."
                },
                "errorpageWhitelabel": {
                    "type": "boolean",
                    "description": "Indicates whether the error pages should be white-labelled or not"
                },
                "limitAfter": {
                    "type": "number",
                    "description": "The amount of data after the rate limit will be activated."
                },
                "limitBandwidth": {
                    "type": "number",
                    "description": "The maximum bandwidth limit in bytes."
                },
                "limitBurst": {
                    "type": "number",
                    "description": "Excessive requests are delayed until their number exceeds the maximum burst size."
                },
                "limitConnections": {
                    "type": "number",
                    "description": "The number of connections limited per IP."
                },
                "limitDownloadSpeed": {
                    "type": "number",
                    "description": "The maximum download speed, in kb/s. Use 0 for unlimited."
                },
                "limitRequests": {
                    "type": "number",
                    "description": "The maximum amount of requests per IP per second."
                },
                "logAnonymized": {
                    "type": "boolean",
                    "description": "Indicates whether logs are anonymized."
                },
                "logAnonymizedStyle": {
                    "type": "string",
                    "description": "Options: `Drop`, `OneDigit`"
                },
                "logEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether logging is enabled."
                },
                "logForwardEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether log forwarding is enabled."
                },
                "logForwardFormat": {
                    "type": "string",
                    "description": "Options: `JSON`, `Plain`"
                },
                "logForwardPort": {
                    "type": "number",
                    "description": "The port number for log forwarding."
                },
                "logForwardProtocol": {
                    "type": "string",
                    "description": "Options: `DataDog`, `TCP`, `TCPEncrypted`, `UDP`"
                },
                "logForwardServer": {
                    "type": "string",
                    "description": "The server address for log forwarding."
                },
                "logForwardToken": {
                    "type": "string",
                    "description": "The token used for log forwarding authentication."
                },
                "logStorageEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether log storage is enabled."
                },
                "logStorageZone": {
                    "type": "number",
                    "description": "The storage zone ID for log storage."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the pull zone."
                },
                "optimizerClassesForce": {
                    "type": "boolean",
                    "description": "Indicates whether the optimizer class list should be enforced."
                },
                "optimizerDynamicImageApi": {
                    "type": "boolean",
                    "description": "Indicates whether the image manipulation should be enabled."
                },
                "optimizerEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether Bunny Optimizer should be enabled."
                },
                "optimizerMinifyCss": {
                    "type": "boolean",
                    "description": "Indicates whether the CSS minifcation should be enabled."
                },
                "optimizerMinifyJs": {
                    "type": "boolean",
                    "description": "Indicates whether the JavaScript minifcation should be enabled."
                },
                "optimizerSmartimage": {
                    "type": "boolean",
                    "description": "Indicates whether the automatic image optimization should be enabled."
                },
                "optimizerSmartimageDesktopMaxwidth": {
                    "type": "number",
                    "description": "The maximum automatic image size for desktop clients."
                },
                "optimizerSmartimageDesktopQuality": {
                    "type": "number",
                    "description": "The image quality for desktop clients."
                },
                "optimizerSmartimageMobileMaxwidth": {
                    "type": "number",
                    "description": "The maximum automatic image size for mobile clients."
                },
                "optimizerSmartimageMobileQuality": {
                    "type": "number",
                    "description": "Determines the image quality for mobile clients"
                },
                "optimizerWatermark": {
                    "type": "boolean",
                    "description": "Indicates whether image watermarking should be enabled."
                },
                "optimizerWatermarkBorderoffset": {
                    "type": "number",
                    "description": "The offset of the watermark image."
                },
                "optimizerWatermarkMinsize": {
                    "type": "number",
                    "description": "The minimum image size to which the watermark will be added."
                },
                "optimizerWatermarkPosition": {
                    "type": "string",
                    "description": "Options: `BottomLeft`, `BottomRight`, `Center`, `CenterStretch`, `TopLeft`, `TopRight`"
                },
                "optimizerWatermarkUrl": {
                    "type": "string",
                    "description": "The URL of the watermark image."
                },
                "optimizerWebp": {
                    "type": "boolean",
                    "description": "Indicates whether the WebP optimization should be enabled."
                },
                "origin": {
                    "$ref": "#/types/bunnynet:index/PullzoneOrigin:PullzoneOrigin"
                },
                "originshieldConcurrencyLimit": {
                    "type": "boolean",
                    "description": "Indicates whether there is a concurrency limit for Origin Shield."
                },
                "originshieldConcurrencyRequests": {
                    "type": "number",
                    "description": "The number of concurrent requests for Origin Shield."
                },
                "originshieldEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether Origin Shield is enabled."
                },
                "originshieldQueueRequests": {
                    "type": "number",
                    "description": "The number of queued requests for Origin Shield."
                },
                "originshieldQueueWait": {
                    "type": "number",
                    "description": "The maximum wait time for queued requests in Origin Shield, in seconds."
                },
                "originshieldZone": {
                    "type": "string",
                    "description": "Options: `FR`, `IL`"
                },
                "permacacheStoragezone": {
                    "type": "number",
                    "description": "The storage zone ID for Perma-Cache."
                },
                "requestCoalescingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether request coalescing is enabled."
                },
                "requestCoalescingTimeout": {
                    "type": "number",
                    "description": "Specifies the timeout period, in seconds, for request coalescing, determining how long to wait before sending combined requests to the origin."
                },
                "routing": {
                    "$ref": "#/types/bunnynet:index/PullzoneRouting:PullzoneRouting"
                },
                "s3AuthEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether requests to origin will be signed with AWS Signature Version 4."
                },
                "s3AuthKey": {
                    "type": "string",
                    "description": "The access key used to authenticate the requests."
                },
                "s3AuthRegion": {
                    "type": "string",
                    "description": "The region name of the bucket used to authenticate the requests."
                },
                "s3AuthSecret": {
                    "type": "string",
                    "description": "The secret key used to authenticate the requests."
                },
                "safehopConnectionTimeout": {
                    "type": "number",
                    "description": "The amount of seconds to wait when connecting to the origin. Otherwise the request will fail or retry."
                },
                "safehopEnabled": {
                    "type": "boolean"
                },
                "safehopResponseTimeout": {
                    "type": "number",
                    "description": "The amount of seconds to wait when waiting for the origin reply. Otherwise the request will fail or retry."
                },
                "safehopRetryCount": {
                    "type": "number",
                    "description": "The number of retries to the origin server."
                },
                "safehopRetryDelay": {
                    "type": "number",
                    "description": "The amount of time that the CDN should wait before retrying an origin request."
                },
                "safehopRetryReasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: `5xxResponse`, `connectionTimeout`, `responseTimeout`"
                },
                "sortQuerystring": {
                    "type": "boolean",
                    "description": "If enabled, the query parameters will be automatically sorted into a consistent order before checking the cache."
                },
                "stripCookies": {
                    "type": "boolean",
                    "description": "If enabled, bunny.net will strip all the Set-Cookie headers from the HTTP responses."
                },
                "tlsSupports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: `TLSv1.0`, `TLSv1.1`"
                },
                "tokenAuthEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether requests without a valid token and expiry timestamp will be rejected."
                },
                "tokenAuthIpValidation": {
                    "type": "boolean",
                    "description": "Indicates whether the secure hash generated by the server will also include an IP address."
                },
                "useBackgroundUpdate": {
                    "type": "boolean",
                    "description": "Indicates whether cache update is performed in the background."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pullzone resources.\n",
                "properties": {
                    "addCanonicalHeader": {
                        "type": "boolean",
                        "description": "Indicates whether the Canonical header is added to the responses."
                    },
                    "allowReferers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of referrer hostnames that are allowed to access the pull zone. Requests containing the header \"Referer: hostname\" that is not on the list will be rejected. If empty, all the referrers are allowed."
                    },
                    "blockIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPs that are blocked from accessing the pull zone. Requests coming from the following IPs will be rejected. If empty, all the IPs will be allowed"
                    },
                    "blockNoReferer": {
                        "type": "boolean",
                        "description": "Indicates whether requests without a referer should be blocked."
                    },
                    "blockPostRequests": {
                        "type": "boolean",
                        "description": "Indicates whether to block POST requests."
                    },
                    "blockReferers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of referrer hostnames that are blocked to access the pull zone. Requests containing the header \"Referer: hostname\" that is not on the list will be rejected. If empty, all the referrers are allowed."
                    },
                    "blockRootPath": {
                        "type": "boolean",
                        "description": "This property indicates whether to block the root path."
                    },
                    "cacheChunked": {
                        "type": "boolean",
                        "description": "Indicates whether the cache slice (Optimize for video) feature is enabled for the Pull Zone"
                    },
                    "cacheEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether smart caching is enabled."
                    },
                    "cacheErrors": {
                        "type": "boolean",
                        "description": "Indicates whether bunny.net should be caching error responses."
                    },
                    "cacheExpirationTime": {
                        "type": "number",
                        "description": "The override cache time, in seconds."
                    },
                    "cacheExpirationTimeBrowser": {
                        "type": "number",
                        "description": "The override cache time for the end client, in seconds."
                    },
                    "cacheStales": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options: \u003cspan pulumi-lang-nodejs=\"`offline`\" pulumi-lang-dotnet=\"`Offline`\" pulumi-lang-go=\"`offline`\" pulumi-lang-python=\"`offline`\" pulumi-lang-yaml=\"`offline`\" pulumi-lang-java=\"`offline`\"\u003e`offline`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`updating`\" pulumi-lang-dotnet=\"`Updating`\" pulumi-lang-go=\"`updating`\" pulumi-lang-python=\"`updating`\" pulumi-lang-yaml=\"`updating`\" pulumi-lang-java=\"`updating`\"\u003e`updating`\u003c/span\u003e"
                    },
                    "cacheVaries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options: \u003cspan pulumi-lang-nodejs=\"`avif`\" pulumi-lang-dotnet=\"`Avif`\" pulumi-lang-go=\"`avif`\" pulumi-lang-python=\"`avif`\" pulumi-lang-yaml=\"`avif`\" pulumi-lang-java=\"`avif`\"\u003e`avif`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cookie`\" pulumi-lang-dotnet=\"`Cookie`\" pulumi-lang-go=\"`cookie`\" pulumi-lang-python=\"`cookie`\" pulumi-lang-yaml=\"`cookie`\" pulumi-lang-java=\"`cookie`\"\u003e`cookie`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`country`\" pulumi-lang-dotnet=\"`Country`\" pulumi-lang-go=\"`country`\" pulumi-lang-python=\"`country`\" pulumi-lang-yaml=\"`country`\" pulumi-lang-java=\"`country`\"\u003e`country`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hostname`\" pulumi-lang-dotnet=\"`Hostname`\" pulumi-lang-go=\"`hostname`\" pulumi-lang-python=\"`hostname`\" pulumi-lang-yaml=\"`hostname`\" pulumi-lang-java=\"`hostname`\"\u003e`hostname`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mobile`\" pulumi-lang-dotnet=\"`Mobile`\" pulumi-lang-go=\"`mobile`\" pulumi-lang-python=\"`mobile`\" pulumi-lang-yaml=\"`mobile`\" pulumi-lang-java=\"`mobile`\"\u003e`mobile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`querystring`\" pulumi-lang-dotnet=\"`Querystring`\" pulumi-lang-go=\"`querystring`\" pulumi-lang-python=\"`querystring`\" pulumi-lang-yaml=\"`querystring`\" pulumi-lang-java=\"`querystring`\"\u003e`querystring`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`webp`\" pulumi-lang-dotnet=\"`Webp`\" pulumi-lang-go=\"`webp`\" pulumi-lang-python=\"`webp`\" pulumi-lang-yaml=\"`webp`\" pulumi-lang-java=\"`webp`\"\u003e`webp`\u003c/span\u003e"
                    },
                    "cacheVaryCookies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Contains the list of vary parameters that will be used for vary cache by cookie string. If empty, cookie vary will not be used."
                    },
                    "cacheVaryQuerystrings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Contains the list of vary parameters that will be used for vary cache by query string. If empty, all parameters will be used to construct the key"
                    },
                    "cdnDomain": {
                        "type": "string",
                        "description": "The CNAME domain of the pull zone for setting up custom hostnames"
                    },
                    "corsEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether CORS (Cross-Origin Resource Sharing) is enabled."
                    },
                    "corsExtensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of file extensions for which CORS is enabled."
                    },
                    "disableLetsencrypt": {
                        "type": "boolean",
                        "description": "If true, the built-in let's encrypt is disabled and requests are passed to the origin."
                    },
                    "errorpageCustomContent": {
                        "type": "string",
                        "description": "Contains the custom error page code that will be returned."
                    },
                    "errorpageCustomEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether custom error page code should be enabled."
                    },
                    "errorpageStatuspageCode": {
                        "type": "string",
                        "description": "The statuspage code that will be used to build the status widget."
                    },
                    "errorpageStatuspageEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the statuspage widget should be displayed on the error pages."
                    },
                    "errorpageWhitelabel": {
                        "type": "boolean",
                        "description": "Indicates whether the error pages should be white-labelled or not"
                    },
                    "limitAfter": {
                        "type": "number",
                        "description": "The amount of data after the rate limit will be activated."
                    },
                    "limitBandwidth": {
                        "type": "number",
                        "description": "The maximum bandwidth limit in bytes."
                    },
                    "limitBurst": {
                        "type": "number",
                        "description": "Excessive requests are delayed until their number exceeds the maximum burst size."
                    },
                    "limitConnections": {
                        "type": "number",
                        "description": "The number of connections limited per IP."
                    },
                    "limitDownloadSpeed": {
                        "type": "number",
                        "description": "The maximum download speed, in kb/s. Use 0 for unlimited."
                    },
                    "limitRequests": {
                        "type": "number",
                        "description": "The maximum amount of requests per IP per second."
                    },
                    "logAnonymized": {
                        "type": "boolean",
                        "description": "Indicates whether logs are anonymized."
                    },
                    "logAnonymizedStyle": {
                        "type": "string",
                        "description": "Options: `Drop`, `OneDigit`"
                    },
                    "logEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether logging is enabled."
                    },
                    "logForwardEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether log forwarding is enabled."
                    },
                    "logForwardFormat": {
                        "type": "string",
                        "description": "Options: `JSON`, `Plain`"
                    },
                    "logForwardPort": {
                        "type": "number",
                        "description": "The port number for log forwarding."
                    },
                    "logForwardProtocol": {
                        "type": "string",
                        "description": "Options: `DataDog`, `TCP`, `TCPEncrypted`, `UDP`"
                    },
                    "logForwardServer": {
                        "type": "string",
                        "description": "The server address for log forwarding."
                    },
                    "logForwardToken": {
                        "type": "string",
                        "description": "The token used for log forwarding authentication."
                    },
                    "logStorageEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether log storage is enabled."
                    },
                    "logStorageZone": {
                        "type": "number",
                        "description": "The storage zone ID for log storage."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the pull zone."
                    },
                    "optimizerClassesForce": {
                        "type": "boolean",
                        "description": "Indicates whether the optimizer class list should be enforced."
                    },
                    "optimizerDynamicImageApi": {
                        "type": "boolean",
                        "description": "Indicates whether the image manipulation should be enabled."
                    },
                    "optimizerEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether Bunny Optimizer should be enabled."
                    },
                    "optimizerMinifyCss": {
                        "type": "boolean",
                        "description": "Indicates whether the CSS minifcation should be enabled."
                    },
                    "optimizerMinifyJs": {
                        "type": "boolean",
                        "description": "Indicates whether the JavaScript minifcation should be enabled."
                    },
                    "optimizerSmartimage": {
                        "type": "boolean",
                        "description": "Indicates whether the automatic image optimization should be enabled."
                    },
                    "optimizerSmartimageDesktopMaxwidth": {
                        "type": "number",
                        "description": "The maximum automatic image size for desktop clients."
                    },
                    "optimizerSmartimageDesktopQuality": {
                        "type": "number",
                        "description": "The image quality for desktop clients."
                    },
                    "optimizerSmartimageMobileMaxwidth": {
                        "type": "number",
                        "description": "The maximum automatic image size for mobile clients."
                    },
                    "optimizerSmartimageMobileQuality": {
                        "type": "number",
                        "description": "Determines the image quality for mobile clients"
                    },
                    "optimizerWatermark": {
                        "type": "boolean",
                        "description": "Indicates whether image watermarking should be enabled."
                    },
                    "optimizerWatermarkBorderoffset": {
                        "type": "number",
                        "description": "The offset of the watermark image."
                    },
                    "optimizerWatermarkMinsize": {
                        "type": "number",
                        "description": "The minimum image size to which the watermark will be added."
                    },
                    "optimizerWatermarkPosition": {
                        "type": "string",
                        "description": "Options: `BottomLeft`, `BottomRight`, `Center`, `CenterStretch`, `TopLeft`, `TopRight`"
                    },
                    "optimizerWatermarkUrl": {
                        "type": "string",
                        "description": "The URL of the watermark image."
                    },
                    "optimizerWebp": {
                        "type": "boolean",
                        "description": "Indicates whether the WebP optimization should be enabled."
                    },
                    "origin": {
                        "$ref": "#/types/bunnynet:index/PullzoneOrigin:PullzoneOrigin"
                    },
                    "originshieldConcurrencyLimit": {
                        "type": "boolean",
                        "description": "Indicates whether there is a concurrency limit for Origin Shield."
                    },
                    "originshieldConcurrencyRequests": {
                        "type": "number",
                        "description": "The number of concurrent requests for Origin Shield."
                    },
                    "originshieldEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether Origin Shield is enabled."
                    },
                    "originshieldQueueRequests": {
                        "type": "number",
                        "description": "The number of queued requests for Origin Shield."
                    },
                    "originshieldQueueWait": {
                        "type": "number",
                        "description": "The maximum wait time for queued requests in Origin Shield, in seconds."
                    },
                    "originshieldZone": {
                        "type": "string",
                        "description": "Options: `FR`, `IL`"
                    },
                    "permacacheStoragezone": {
                        "type": "number",
                        "description": "The storage zone ID for Perma-Cache."
                    },
                    "pullzoneId": {
                        "type": "number",
                        "description": "The unique ID of the pull zone."
                    },
                    "requestCoalescingEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether request coalescing is enabled."
                    },
                    "requestCoalescingTimeout": {
                        "type": "number",
                        "description": "Specifies the timeout period, in seconds, for request coalescing, determining how long to wait before sending combined requests to the origin."
                    },
                    "routing": {
                        "$ref": "#/types/bunnynet:index/PullzoneRouting:PullzoneRouting"
                    },
                    "s3AuthEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether requests to origin will be signed with AWS Signature Version 4."
                    },
                    "s3AuthKey": {
                        "type": "string",
                        "description": "The access key used to authenticate the requests."
                    },
                    "s3AuthRegion": {
                        "type": "string",
                        "description": "The region name of the bucket used to authenticate the requests."
                    },
                    "s3AuthSecret": {
                        "type": "string",
                        "description": "The secret key used to authenticate the requests."
                    },
                    "safehopConnectionTimeout": {
                        "type": "number",
                        "description": "The amount of seconds to wait when connecting to the origin. Otherwise the request will fail or retry."
                    },
                    "safehopEnabled": {
                        "type": "boolean"
                    },
                    "safehopResponseTimeout": {
                        "type": "number",
                        "description": "The amount of seconds to wait when waiting for the origin reply. Otherwise the request will fail or retry."
                    },
                    "safehopRetryCount": {
                        "type": "number",
                        "description": "The number of retries to the origin server."
                    },
                    "safehopRetryDelay": {
                        "type": "number",
                        "description": "The amount of time that the CDN should wait before retrying an origin request."
                    },
                    "safehopRetryReasons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options: `5xxResponse`, `connectionTimeout`, `responseTimeout`"
                    },
                    "sortQuerystring": {
                        "type": "boolean",
                        "description": "If enabled, the query parameters will be automatically sorted into a consistent order before checking the cache."
                    },
                    "stripCookies": {
                        "type": "boolean",
                        "description": "If enabled, bunny.net will strip all the Set-Cookie headers from the HTTP responses."
                    },
                    "tlsSupports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options: `TLSv1.0`, `TLSv1.1`"
                    },
                    "tokenAuthEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether requests without a valid token and expiry timestamp will be rejected."
                    },
                    "tokenAuthIpValidation": {
                        "type": "boolean",
                        "description": "Indicates whether the secure hash generated by the server will also include an IP address."
                    },
                    "tokenAuthKey": {
                        "type": "string",
                        "description": "The auth key used for secure URL token authentication.",
                        "secret": true
                    },
                    "useBackgroundUpdate": {
                        "type": "boolean",
                        "description": "Indicates whether cache update is performed in the background."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/pullzoneEdgerule:PullzoneEdgerule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Options: `BlockRequest`, `BypassPermaCache`, `DisableOptimizer`, `DisableTokenAuthentication`, `EnableTokenAuthentication`, `ForceCompression`, `ForceDownload`, `ForceSSL`, `IgnoreQueryString`, `OriginStorage`, `OriginUrl`, `OverrideBrowserCacheTime`, `OverrideCacheTime`, `OverrideCacheTimePublic`, `Redirect`, `SetConnectionLimit`, `SetNetworkRateLimit`, `SetRequestHeader`, `SetRequestsPerSecondLimit`, `SetResponseHeader`, `SetStatusCode`"
                },
                "actionParameter1": {
                    "type": "string"
                },
                "actionParameter2": {
                    "type": "string"
                },
                "actionParameter3": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/PullzoneEdgeruleAction:PullzoneEdgeruleAction"
                    },
                    "description": "List of actions for the edge rule."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the edge rule."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the edge rule is enabled."
                },
                "matchType": {
                    "type": "string",
                    "description": "Options: `MatchAll`, `MatchAny`, `MatchNone`"
                },
                "pullzone": {
                    "type": "number"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/PullzoneEdgeruleTrigger:PullzoneEdgeruleTrigger"
                    }
                }
            },
            "required": [
                "actions",
                "description",
                "enabled",
                "matchType",
                "pullzone",
                "triggers"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Options: `BlockRequest`, `BypassPermaCache`, `DisableOptimizer`, `DisableTokenAuthentication`, `EnableTokenAuthentication`, `ForceCompression`, `ForceDownload`, `ForceSSL`, `IgnoreQueryString`, `OriginStorage`, `OriginUrl`, `OverrideBrowserCacheTime`, `OverrideCacheTime`, `OverrideCacheTimePublic`, `Redirect`, `SetConnectionLimit`, `SetNetworkRateLimit`, `SetRequestHeader`, `SetRequestsPerSecondLimit`, `SetResponseHeader`, `SetStatusCode`"
                },
                "actionParameter1": {
                    "type": "string"
                },
                "actionParameter2": {
                    "type": "string"
                },
                "actionParameter3": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/PullzoneEdgeruleAction:PullzoneEdgeruleAction"
                    },
                    "description": "List of actions for the edge rule."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the edge rule."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the edge rule is enabled."
                },
                "matchType": {
                    "type": "string",
                    "description": "Options: `MatchAll`, `MatchAny`, `MatchNone`"
                },
                "pullzone": {
                    "type": "number"
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/PullzoneEdgeruleTrigger:PullzoneEdgeruleTrigger"
                    }
                }
            },
            "requiredInputs": [
                "enabled",
                "pullzone",
                "triggers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PullzoneEdgerule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Options: `BlockRequest`, `BypassPermaCache`, `DisableOptimizer`, `DisableTokenAuthentication`, `EnableTokenAuthentication`, `ForceCompression`, `ForceDownload`, `ForceSSL`, `IgnoreQueryString`, `OriginStorage`, `OriginUrl`, `OverrideBrowserCacheTime`, `OverrideCacheTime`, `OverrideCacheTimePublic`, `Redirect`, `SetConnectionLimit`, `SetNetworkRateLimit`, `SetRequestHeader`, `SetRequestsPerSecondLimit`, `SetResponseHeader`, `SetStatusCode`"
                    },
                    "actionParameter1": {
                        "type": "string"
                    },
                    "actionParameter2": {
                        "type": "string"
                    },
                    "actionParameter3": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/bunnynet:index/PullzoneEdgeruleAction:PullzoneEdgeruleAction"
                        },
                        "description": "List of actions for the edge rule."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the edge rule."
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether the edge rule is enabled."
                    },
                    "matchType": {
                        "type": "string",
                        "description": "Options: `MatchAll`, `MatchAny`, `MatchNone`"
                    },
                    "pullzone": {
                        "type": "number"
                    },
                    "triggers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/bunnynet:index/PullzoneEdgeruleTrigger:PullzoneEdgeruleTrigger"
                        }
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/pullzoneHostname:PullzoneHostname": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "The certificate for the hostname, in PEM format. ***Important***: the Bunny API will not return the certificate data, so you'll have to make sure you're importing the correct certificate."
                },
                "certificateKey": {
                    "type": "string",
                    "description": "The certificate private key for the hostname, in PEM format. ***Important***: the Bunny API will not return the certificate key, so you'll have to make sure you're importing the correct certificate key."
                },
                "forceSsl": {
                    "type": "boolean",
                    "description": "Indicates whether SSL should be enforced for the hostname."
                },
                "isInternal": {
                    "type": "boolean",
                    "description": "Indicates whether the hostname is internal (in the CDN domain) or provided by the user."
                },
                "name": {
                    "type": "string",
                    "description": "The hostname value for the domain name."
                },
                "pullzone": {
                    "type": "number",
                    "description": "The ID of the linked pull zone."
                },
                "pullzoneHostnameId": {
                    "type": "number",
                    "description": "The unique ID of the hostname."
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the hostname should support HTTPS. If a custom certificate is not provided via the \u003ccode\u003ecertificate\u003c/code\u003e attribute, a Domain-validated TLS certificate will be automatically obtained and managed by Bunny. ***Important***: it is not possible to tell managed and custom certificates apart for imported resources."
                }
            },
            "required": [
                "certificate",
                "certificateKey",
                "forceSsl",
                "pullzoneHostnameId",
                "isInternal",
                "name",
                "pullzone",
                "tlsEnabled"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "The certificate for the hostname, in PEM format. ***Important***: the Bunny API will not return the certificate data, so you'll have to make sure you're importing the correct certificate."
                },
                "certificateKey": {
                    "type": "string",
                    "description": "The certificate private key for the hostname, in PEM format. ***Important***: the Bunny API will not return the certificate key, so you'll have to make sure you're importing the correct certificate key."
                },
                "forceSsl": {
                    "type": "boolean",
                    "description": "Indicates whether SSL should be enforced for the hostname."
                },
                "name": {
                    "type": "string",
                    "description": "The hostname value for the domain name."
                },
                "pullzone": {
                    "type": "number",
                    "description": "The ID of the linked pull zone."
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the hostname should support HTTPS. If a custom certificate is not provided via the \u003ccode\u003ecertificate\u003c/code\u003e attribute, a Domain-validated TLS certificate will be automatically obtained and managed by Bunny. ***Important***: it is not possible to tell managed and custom certificates apart for imported resources."
                }
            },
            "requiredInputs": [
                "pullzone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PullzoneHostname resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "The certificate for the hostname, in PEM format. ***Important***: the Bunny API will not return the certificate data, so you'll have to make sure you're importing the correct certificate."
                    },
                    "certificateKey": {
                        "type": "string",
                        "description": "The certificate private key for the hostname, in PEM format. ***Important***: the Bunny API will not return the certificate key, so you'll have to make sure you're importing the correct certificate key."
                    },
                    "forceSsl": {
                        "type": "boolean",
                        "description": "Indicates whether SSL should be enforced for the hostname."
                    },
                    "isInternal": {
                        "type": "boolean",
                        "description": "Indicates whether the hostname is internal (in the CDN domain) or provided by the user."
                    },
                    "name": {
                        "type": "string",
                        "description": "The hostname value for the domain name."
                    },
                    "pullzone": {
                        "type": "number",
                        "description": "The ID of the linked pull zone."
                    },
                    "pullzoneHostnameId": {
                        "type": "number",
                        "description": "The unique ID of the hostname."
                    },
                    "tlsEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the hostname should support HTTPS. If a custom certificate is not provided via the \u003ccode\u003ecertificate\u003c/code\u003e attribute, a Domain-validated TLS certificate will be automatically obtained and managed by Bunny. ***Important***: it is not possible to tell managed and custom certificates apart for imported resources."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/pullzoneOptimizerClass:PullzoneOptimizerClass": {
            "properties": {
                "aspectRatio": {
                    "type": "string",
                    "description": "The aspect ratio for image optimization."
                },
                "autoOptimize": {
                    "type": "string",
                    "description": "Indicates whether automatic optimization for images is enabled."
                },
                "blur": {
                    "type": "number",
                    "description": "The level of blur to apply to images."
                },
                "brightness": {
                    "type": "number",
                    "description": "The brightness adjustment for images."
                },
                "contrast": {
                    "type": "number",
                    "description": "The contrast adjustment for images."
                },
                "crop": {
                    "type": "string",
                    "description": "The cropping settings for images."
                },
                "cropGravity": {
                    "type": "string",
                    "description": "The gravity setting for cropping."
                },
                "flip": {
                    "type": "boolean",
                    "description": "Indicates whether to flip images horizontally."
                },
                "flop": {
                    "type": "boolean",
                    "description": "Indicates whether to flip images vertically."
                },
                "height": {
                    "type": "number",
                    "description": "The height to which images should be resized."
                },
                "hue": {
                    "type": "number",
                    "description": "The hue adjustment for images."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optimizer class."
                },
                "pullzone": {
                    "type": "number",
                    "description": "The ID of the linked pull zone."
                },
                "quality": {
                    "type": "number",
                    "description": "The quality setting for image optimization."
                },
                "saturation": {
                    "type": "number",
                    "description": "The saturation adjustment for images."
                },
                "sepia": {
                    "type": "number",
                    "description": "The level of sepia tone to apply to images."
                },
                "sharpen": {
                    "type": "boolean",
                    "description": "Indicates whether to sharpen images."
                },
                "width": {
                    "type": "number",
                    "description": "The width to which images should be resized."
                }
            },
            "required": [
                "name",
                "pullzone"
            ],
            "inputProperties": {
                "aspectRatio": {
                    "type": "string",
                    "description": "The aspect ratio for image optimization."
                },
                "autoOptimize": {
                    "type": "string",
                    "description": "Indicates whether automatic optimization for images is enabled."
                },
                "blur": {
                    "type": "number",
                    "description": "The level of blur to apply to images."
                },
                "brightness": {
                    "type": "number",
                    "description": "The brightness adjustment for images."
                },
                "contrast": {
                    "type": "number",
                    "description": "The contrast adjustment for images."
                },
                "crop": {
                    "type": "string",
                    "description": "The cropping settings for images."
                },
                "cropGravity": {
                    "type": "string",
                    "description": "The gravity setting for cropping."
                },
                "flip": {
                    "type": "boolean",
                    "description": "Indicates whether to flip images horizontally."
                },
                "flop": {
                    "type": "boolean",
                    "description": "Indicates whether to flip images vertically."
                },
                "height": {
                    "type": "number",
                    "description": "The height to which images should be resized."
                },
                "hue": {
                    "type": "number",
                    "description": "The hue adjustment for images."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the optimizer class."
                },
                "pullzone": {
                    "type": "number",
                    "description": "The ID of the linked pull zone."
                },
                "quality": {
                    "type": "number",
                    "description": "The quality setting for image optimization."
                },
                "saturation": {
                    "type": "number",
                    "description": "The saturation adjustment for images."
                },
                "sepia": {
                    "type": "number",
                    "description": "The level of sepia tone to apply to images."
                },
                "sharpen": {
                    "type": "boolean",
                    "description": "Indicates whether to sharpen images."
                },
                "width": {
                    "type": "number",
                    "description": "The width to which images should be resized."
                }
            },
            "requiredInputs": [
                "pullzone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PullzoneOptimizerClass resources.\n",
                "properties": {
                    "aspectRatio": {
                        "type": "string",
                        "description": "The aspect ratio for image optimization."
                    },
                    "autoOptimize": {
                        "type": "string",
                        "description": "Indicates whether automatic optimization for images is enabled."
                    },
                    "blur": {
                        "type": "number",
                        "description": "The level of blur to apply to images."
                    },
                    "brightness": {
                        "type": "number",
                        "description": "The brightness adjustment for images."
                    },
                    "contrast": {
                        "type": "number",
                        "description": "The contrast adjustment for images."
                    },
                    "crop": {
                        "type": "string",
                        "description": "The cropping settings for images."
                    },
                    "cropGravity": {
                        "type": "string",
                        "description": "The gravity setting for cropping."
                    },
                    "flip": {
                        "type": "boolean",
                        "description": "Indicates whether to flip images horizontally."
                    },
                    "flop": {
                        "type": "boolean",
                        "description": "Indicates whether to flip images vertically."
                    },
                    "height": {
                        "type": "number",
                        "description": "The height to which images should be resized."
                    },
                    "hue": {
                        "type": "number",
                        "description": "The hue adjustment for images."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the optimizer class."
                    },
                    "pullzone": {
                        "type": "number",
                        "description": "The ID of the linked pull zone."
                    },
                    "quality": {
                        "type": "number",
                        "description": "The quality setting for image optimization."
                    },
                    "saturation": {
                        "type": "number",
                        "description": "The saturation adjustment for images."
                    },
                    "sepia": {
                        "type": "number",
                        "description": "The level of sepia tone to apply to images."
                    },
                    "sharpen": {
                        "type": "boolean",
                        "description": "Indicates whether to sharpen images."
                    },
                    "width": {
                        "type": "number",
                        "description": "The width to which images should be resized."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/storageFile:StorageFile": {
            "properties": {
                "checksum": {
                    "type": "string",
                    "description": "The SHA-256 hash of the stored file."
                },
                "content": {
                    "type": "string",
                    "description": "The to be stored in the file. Use \u003ccode\u003esource\u003c/code\u003e to upload files from the local disk."
                },
                "contentType": {
                    "type": "string",
                    "description": "Specifies the content type of the file."
                },
                "dateCreated": {
                    "type": "string",
                    "description": "The date and time when the file was created."
                },
                "dateModified": {
                    "type": "string",
                    "description": "The date and time when the file was last modified."
                },
                "path": {
                    "type": "string",
                    "description": "The path of the file within the storage zone."
                },
                "size": {
                    "type": "number",
                    "description": "The size of the file in bytes."
                },
                "source": {
                    "type": "string",
                    "description": "The path in the local disk for the file to be uploaded to the storage zone. Use \u003ccode\u003econtent\u003c/code\u003e to define the content directly."
                },
                "zone": {
                    "type": "number",
                    "description": "The ID of the storage zone where the file is stored."
                }
            },
            "required": [
                "checksum",
                "contentType",
                "dateCreated",
                "dateModified",
                "path",
                "size",
                "zone"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The to be stored in the file. Use \u003ccode\u003esource\u003c/code\u003e to upload files from the local disk."
                },
                "contentType": {
                    "type": "string",
                    "description": "Specifies the content type of the file."
                },
                "path": {
                    "type": "string",
                    "description": "The path of the file within the storage zone."
                },
                "source": {
                    "type": "string",
                    "description": "The path in the local disk for the file to be uploaded to the storage zone. Use \u003ccode\u003econtent\u003c/code\u003e to define the content directly."
                },
                "zone": {
                    "type": "number",
                    "description": "The ID of the storage zone where the file is stored."
                }
            },
            "requiredInputs": [
                "path",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StorageFile resources.\n",
                "properties": {
                    "checksum": {
                        "type": "string",
                        "description": "The SHA-256 hash of the stored file."
                    },
                    "content": {
                        "type": "string",
                        "description": "The to be stored in the file. Use \u003ccode\u003esource\u003c/code\u003e to upload files from the local disk."
                    },
                    "contentType": {
                        "type": "string",
                        "description": "Specifies the content type of the file."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The date and time when the file was created."
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The date and time when the file was last modified."
                    },
                    "path": {
                        "type": "string",
                        "description": "The path of the file within the storage zone."
                    },
                    "size": {
                        "type": "number",
                        "description": "The size of the file in bytes."
                    },
                    "source": {
                        "type": "string",
                        "description": "The path in the local disk for the file to be uploaded to the storage zone. Use \u003ccode\u003econtent\u003c/code\u003e to define the content directly."
                    },
                    "zone": {
                        "type": "number",
                        "description": "The ID of the storage zone where the file is stored."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/storageZone:StorageZone": {
            "properties": {
                "custom404FilePath": {
                    "type": "string",
                    "description": "The file path for a custom 404 error page."
                },
                "dateModified": {
                    "type": "string",
                    "description": "The date when the zone was last modified."
                },
                "hostname": {
                    "type": "string",
                    "description": "The hostname for accessing the storage zone."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage zone."
                },
                "password": {
                    "type": "string",
                    "description": "The password for accessing the storage zone.",
                    "secret": true
                },
                "passwordReadonly": {
                    "type": "string",
                    "description": "The read-only password for accessing the storage zone.",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the storage zone is located."
                },
                "replicationRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of regions for data replication."
                },
                "rewrite404To200": {
                    "type": "boolean",
                    "description": "Indicates whether to rewrite 404 errors to 200 status."
                },
                "storageZoneId": {
                    "type": "number",
                    "description": "The ID of the storage zone."
                },
                "zoneTier": {
                    "type": "string",
                    "description": "Options: `Edge`, `Standard`"
                }
            },
            "required": [
                "dateModified",
                "hostname",
                "storageZoneId",
                "name",
                "password",
                "passwordReadonly",
                "region",
                "rewrite404To200",
                "zoneTier"
            ],
            "inputProperties": {
                "custom404FilePath": {
                    "type": "string",
                    "description": "The file path for a custom 404 error page."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage zone."
                },
                "region": {
                    "type": "string",
                    "description": "The region where the storage zone is located."
                },
                "replicationRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of regions for data replication."
                },
                "rewrite404To200": {
                    "type": "boolean",
                    "description": "Indicates whether to rewrite 404 errors to 200 status."
                },
                "zoneTier": {
                    "type": "string",
                    "description": "Options: `Edge`, `Standard`"
                }
            },
            "requiredInputs": [
                "region",
                "zoneTier"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StorageZone resources.\n",
                "properties": {
                    "custom404FilePath": {
                        "type": "string",
                        "description": "The file path for a custom 404 error page."
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The date when the zone was last modified."
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The hostname for accessing the storage zone."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the storage zone."
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for accessing the storage zone.",
                        "secret": true
                    },
                    "passwordReadonly": {
                        "type": "string",
                        "description": "The read-only password for accessing the storage zone.",
                        "secret": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the storage zone is located."
                    },
                    "replicationRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of regions for data replication."
                    },
                    "rewrite404To200": {
                        "type": "boolean",
                        "description": "Indicates whether to rewrite 404 errors to 200 status."
                    },
                    "storageZoneId": {
                        "type": "number",
                        "description": "The ID of the storage zone."
                    },
                    "zoneTier": {
                        "type": "string",
                        "description": "Options: `Edge`, `Standard`"
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/streamCollection:StreamCollection": {
            "properties": {
                "library": {
                    "type": "number",
                    "description": "The ID of the stream library to which the collection belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream collection."
                }
            },
            "required": [
                "library",
                "name"
            ],
            "inputProperties": {
                "library": {
                    "type": "number",
                    "description": "The ID of the stream library to which the collection belongs."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream collection."
                }
            },
            "requiredInputs": [
                "library"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StreamCollection resources.\n",
                "properties": {
                    "library": {
                        "type": "number",
                        "description": "The ID of the stream library to which the collection belongs."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the stream collection."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/streamLibrary:StreamLibrary": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "The API key for accessing the stream library."
                },
                "bitrate1080p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 1080p videos, in kilobits per second."
                },
                "bitrate1440p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 1440p videos, in kilobits per second."
                },
                "bitrate2160p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 2160p videos, in kilobits per second."
                },
                "bitrate240p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 240p videos, in kilobits per second."
                },
                "bitrate360p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 360p videos, in kilobits per second."
                },
                "bitrate480p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 480p videos, in kilobits per second."
                },
                "bitrate720p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 720p videos, in kilobits per second."
                },
                "cdnTokenAuthenticationRequired": {
                    "type": "boolean",
                    "description": "Indicates whether CDN token authentication is required."
                },
                "contentTaggingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether content tagging is enabled."
                },
                "directPlayEnabled": {
                    "type": "boolean",
                    "description": "Determines direct play URLs are enabled."
                },
                "directUrlFileAccessBlocked": {
                    "type": "boolean",
                    "description": "Indicates whether the requests without a referrer are blocked."
                },
                "drmMediacageBasicEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the MediaCage basic DRM is enabled"
                },
                "earlyPlayEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the Early-Play feature is enabled."
                },
                "mp4FallbackEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the MP4 fallback feature is enabled."
                },
                "multiAudioTrackSupportEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether multiple output audio track support is enabled."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream library."
                },
                "originalFilesKeep": {
                    "type": "boolean",
                    "description": "Indicates whether to keep original files after encoding."
                },
                "playerCaptionsBackgroundColor": {
                    "type": "string",
                    "description": "The background color of the captions in the video player."
                },
                "playerCaptionsFontColor": {
                    "type": "string",
                    "description": "The font color of the captions in the video player."
                },
                "playerCaptionsFontSize": {
                    "type": "number",
                    "description": "The font size of the captions in the video player."
                },
                "playerControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`airplay`\" pulumi-lang-dotnet=\"`Airplay`\" pulumi-lang-go=\"`airplay`\" pulumi-lang-python=\"`airplay`\" pulumi-lang-yaml=\"`airplay`\" pulumi-lang-java=\"`airplay`\"\u003e`airplay`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captions`\" pulumi-lang-dotnet=\"`Captions`\" pulumi-lang-go=\"`captions`\" pulumi-lang-python=\"`captions`\" pulumi-lang-yaml=\"`captions`\" pulumi-lang-java=\"`captions`\"\u003e`captions`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`chromecast`\" pulumi-lang-dotnet=\"`Chromecast`\" pulumi-lang-go=\"`chromecast`\" pulumi-lang-python=\"`chromecast`\" pulumi-lang-yaml=\"`chromecast`\" pulumi-lang-java=\"`chromecast`\"\u003e`chromecast`\u003c/span\u003e, `current-time`, \u003cspan pulumi-lang-nodejs=\"`duration`\" pulumi-lang-dotnet=\"`Duration`\" pulumi-lang-go=\"`duration`\" pulumi-lang-python=\"`duration`\" pulumi-lang-yaml=\"`duration`\" pulumi-lang-java=\"`duration`\"\u003e`duration`\u003c/span\u003e, `fast-forward`, \u003cspan pulumi-lang-nodejs=\"`fullscreen`\" pulumi-lang-dotnet=\"`Fullscreen`\" pulumi-lang-go=\"`fullscreen`\" pulumi-lang-python=\"`fullscreen`\" pulumi-lang-yaml=\"`fullscreen`\" pulumi-lang-java=\"`fullscreen`\"\u003e`fullscreen`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mute`\" pulumi-lang-dotnet=\"`Mute`\" pulumi-lang-go=\"`mute`\" pulumi-lang-python=\"`mute`\" pulumi-lang-yaml=\"`mute`\" pulumi-lang-java=\"`mute`\"\u003e`mute`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pip`\" pulumi-lang-dotnet=\"`Pip`\" pulumi-lang-go=\"`pip`\" pulumi-lang-python=\"`pip`\" pulumi-lang-yaml=\"`pip`\" pulumi-lang-java=\"`pip`\"\u003e`pip`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`play`\" pulumi-lang-dotnet=\"`Play`\" pulumi-lang-go=\"`play`\" pulumi-lang-python=\"`play`\" pulumi-lang-yaml=\"`play`\" pulumi-lang-java=\"`play`\"\u003e`play`\u003c/span\u003e, `play-large`, \u003cspan pulumi-lang-nodejs=\"`progress`\" pulumi-lang-dotnet=\"`Progress`\" pulumi-lang-go=\"`progress`\" pulumi-lang-python=\"`progress`\" pulumi-lang-yaml=\"`progress`\" pulumi-lang-java=\"`progress`\"\u003e`progress`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rewind`\" pulumi-lang-dotnet=\"`Rewind`\" pulumi-lang-go=\"`rewind`\" pulumi-lang-python=\"`rewind`\" pulumi-lang-yaml=\"`rewind`\" pulumi-lang-java=\"`rewind`\"\u003e`rewind`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`settings`\" pulumi-lang-dotnet=\"`Settings`\" pulumi-lang-go=\"`settings`\" pulumi-lang-python=\"`settings`\" pulumi-lang-yaml=\"`settings`\" pulumi-lang-java=\"`settings`\"\u003e`settings`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`volume`\" pulumi-lang-dotnet=\"`Volume`\" pulumi-lang-go=\"`volume`\" pulumi-lang-python=\"`volume`\" pulumi-lang-yaml=\"`volume`\" pulumi-lang-java=\"`volume`\"\u003e`volume`\u003c/span\u003e"
                },
                "playerCustomHead": {
                    "type": "string",
                    "description": "Custom HTML to be included in the head of the video player."
                },
                "playerFontFamily": {
                    "type": "string",
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`arial`\" pulumi-lang-dotnet=\"`Arial`\" pulumi-lang-go=\"`arial`\" pulumi-lang-python=\"`arial`\" pulumi-lang-yaml=\"`arial`\" pulumi-lang-java=\"`arial`\"\u003e`arial`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`inter`\" pulumi-lang-dotnet=\"`Inter`\" pulumi-lang-go=\"`inter`\" pulumi-lang-python=\"`inter`\" pulumi-lang-yaml=\"`inter`\" pulumi-lang-java=\"`inter`\"\u003e`inter`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lato`\" pulumi-lang-dotnet=\"`Lato`\" pulumi-lang-go=\"`lato`\" pulumi-lang-python=\"`lato`\" pulumi-lang-yaml=\"`lato`\" pulumi-lang-java=\"`lato`\"\u003e`lato`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`oswald`\" pulumi-lang-dotnet=\"`Oswald`\" pulumi-lang-go=\"`oswald`\" pulumi-lang-python=\"`oswald`\" pulumi-lang-yaml=\"`oswald`\" pulumi-lang-java=\"`oswald`\"\u003e`oswald`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`raleway`\" pulumi-lang-dotnet=\"`Raleway`\" pulumi-lang-go=\"`raleway`\" pulumi-lang-python=\"`raleway`\" pulumi-lang-yaml=\"`raleway`\" pulumi-lang-java=\"`raleway`\"\u003e`raleway`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`roboto`\" pulumi-lang-dotnet=\"`Roboto`\" pulumi-lang-go=\"`roboto`\" pulumi-lang-python=\"`roboto`\" pulumi-lang-yaml=\"`roboto`\" pulumi-lang-java=\"`roboto`\"\u003e`roboto`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rubik`\" pulumi-lang-dotnet=\"`Rubik`\" pulumi-lang-go=\"`rubik`\" pulumi-lang-python=\"`rubik`\" pulumi-lang-yaml=\"`rubik`\" pulumi-lang-java=\"`rubik`\"\u003e`rubik`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ubuntu`\" pulumi-lang-dotnet=\"`Ubuntu`\" pulumi-lang-go=\"`ubuntu`\" pulumi-lang-python=\"`ubuntu`\" pulumi-lang-yaml=\"`ubuntu`\" pulumi-lang-java=\"`ubuntu`\"\u003e`ubuntu`\u003c/span\u003e"
                },
                "playerLanguage": {
                    "type": "string",
                    "description": "Specifies the language for the video player interface."
                },
                "playerPrimaryColor": {
                    "type": "string",
                    "description": "Customizes the appearance of the video player."
                },
                "playerWatchtimeHeatmapEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the video watch heatmap should be displayed in the player."
                },
                "pullzone": {
                    "type": "number",
                    "description": "The ID of the linked pullzone."
                },
                "referersAlloweds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of allowed referrer domains allowed to access videos in this library."
                },
                "referersBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of blocked referrer domains blocked from accessing videos in this library."
                },
                "resolutions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of resolutions available for the videos."
                },
                "storageZone": {
                    "type": "number",
                    "description": "The ID of the linked storage zone."
                },
                "streamLibraryId": {
                    "type": "number"
                },
                "transcribingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the automatic audio transcribing is currently enabled for this zone."
                },
                "transcribingLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of languages that the captions will be automatically transcribed to."
                },
                "transcribingSmartDescriptionEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether automatic transcribing description generation is currently enabled."
                },
                "transcribingSmartTitleEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether automatic transcribing title generation is currently enabled."
                },
                "vastTagUrl": {
                    "type": "string",
                    "description": "The URL of the VAST tag for ad integration."
                },
                "viewTokenAuthenticationRequired": {
                    "type": "boolean",
                    "description": "Indicates whether the player token authentication is enabled"
                },
                "watermarkHeight": {
                    "type": "number",
                    "description": "The height of the watermark (in %)."
                },
                "watermarkPositionLeft": {
                    "type": "number",
                    "description": "The left offset of the watermark position (in %)."
                },
                "watermarkPositionTop": {
                    "type": "number",
                    "description": "The top offset of the watermark position (in %)."
                },
                "watermarkWidth": {
                    "type": "number",
                    "description": "The width of the watermark (in %)."
                },
                "webhookUrl": {
                    "type": "string",
                    "description": "The URL for webhook notifications."
                }
            },
            "required": [
                "apiKey",
                "bitrate1080p",
                "bitrate1440p",
                "bitrate2160p",
                "bitrate240p",
                "bitrate360p",
                "bitrate480p",
                "bitrate720p",
                "cdnTokenAuthenticationRequired",
                "contentTaggingEnabled",
                "directPlayEnabled",
                "directUrlFileAccessBlocked",
                "drmMediacageBasicEnabled",
                "earlyPlayEnabled",
                "streamLibraryId",
                "mp4FallbackEnabled",
                "multiAudioTrackSupportEnabled",
                "name",
                "originalFilesKeep",
                "playerCaptionsBackgroundColor",
                "playerCaptionsFontColor",
                "playerCaptionsFontSize",
                "playerControls",
                "playerCustomHead",
                "playerFontFamily",
                "playerLanguage",
                "playerPrimaryColor",
                "playerWatchtimeHeatmapEnabled",
                "pullzone",
                "referersAlloweds",
                "referersBlockeds",
                "resolutions",
                "storageZone",
                "transcribingEnabled",
                "transcribingLanguages",
                "transcribingSmartDescriptionEnabled",
                "transcribingSmartTitleEnabled",
                "vastTagUrl",
                "viewTokenAuthenticationRequired",
                "watermarkHeight",
                "watermarkPositionLeft",
                "watermarkPositionTop",
                "watermarkWidth",
                "webhookUrl"
            ],
            "inputProperties": {
                "bitrate1080p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 1080p videos, in kilobits per second."
                },
                "bitrate1440p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 1440p videos, in kilobits per second."
                },
                "bitrate2160p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 2160p videos, in kilobits per second."
                },
                "bitrate240p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 240p videos, in kilobits per second."
                },
                "bitrate360p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 360p videos, in kilobits per second."
                },
                "bitrate480p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 480p videos, in kilobits per second."
                },
                "bitrate720p": {
                    "type": "number",
                    "description": "The bitrate used for encoding 720p videos, in kilobits per second."
                },
                "cdnTokenAuthenticationRequired": {
                    "type": "boolean",
                    "description": "Indicates whether CDN token authentication is required."
                },
                "contentTaggingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether content tagging is enabled."
                },
                "directPlayEnabled": {
                    "type": "boolean",
                    "description": "Determines direct play URLs are enabled."
                },
                "directUrlFileAccessBlocked": {
                    "type": "boolean",
                    "description": "Indicates whether the requests without a referrer are blocked."
                },
                "drmMediacageBasicEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the MediaCage basic DRM is enabled"
                },
                "earlyPlayEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the Early-Play feature is enabled."
                },
                "mp4FallbackEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the MP4 fallback feature is enabled."
                },
                "multiAudioTrackSupportEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether multiple output audio track support is enabled."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the stream library."
                },
                "originalFilesKeep": {
                    "type": "boolean",
                    "description": "Indicates whether to keep original files after encoding."
                },
                "playerCaptionsBackgroundColor": {
                    "type": "string",
                    "description": "The background color of the captions in the video player."
                },
                "playerCaptionsFontColor": {
                    "type": "string",
                    "description": "The font color of the captions in the video player."
                },
                "playerCaptionsFontSize": {
                    "type": "number",
                    "description": "The font size of the captions in the video player."
                },
                "playerControls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`airplay`\" pulumi-lang-dotnet=\"`Airplay`\" pulumi-lang-go=\"`airplay`\" pulumi-lang-python=\"`airplay`\" pulumi-lang-yaml=\"`airplay`\" pulumi-lang-java=\"`airplay`\"\u003e`airplay`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captions`\" pulumi-lang-dotnet=\"`Captions`\" pulumi-lang-go=\"`captions`\" pulumi-lang-python=\"`captions`\" pulumi-lang-yaml=\"`captions`\" pulumi-lang-java=\"`captions`\"\u003e`captions`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`chromecast`\" pulumi-lang-dotnet=\"`Chromecast`\" pulumi-lang-go=\"`chromecast`\" pulumi-lang-python=\"`chromecast`\" pulumi-lang-yaml=\"`chromecast`\" pulumi-lang-java=\"`chromecast`\"\u003e`chromecast`\u003c/span\u003e, `current-time`, \u003cspan pulumi-lang-nodejs=\"`duration`\" pulumi-lang-dotnet=\"`Duration`\" pulumi-lang-go=\"`duration`\" pulumi-lang-python=\"`duration`\" pulumi-lang-yaml=\"`duration`\" pulumi-lang-java=\"`duration`\"\u003e`duration`\u003c/span\u003e, `fast-forward`, \u003cspan pulumi-lang-nodejs=\"`fullscreen`\" pulumi-lang-dotnet=\"`Fullscreen`\" pulumi-lang-go=\"`fullscreen`\" pulumi-lang-python=\"`fullscreen`\" pulumi-lang-yaml=\"`fullscreen`\" pulumi-lang-java=\"`fullscreen`\"\u003e`fullscreen`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mute`\" pulumi-lang-dotnet=\"`Mute`\" pulumi-lang-go=\"`mute`\" pulumi-lang-python=\"`mute`\" pulumi-lang-yaml=\"`mute`\" pulumi-lang-java=\"`mute`\"\u003e`mute`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pip`\" pulumi-lang-dotnet=\"`Pip`\" pulumi-lang-go=\"`pip`\" pulumi-lang-python=\"`pip`\" pulumi-lang-yaml=\"`pip`\" pulumi-lang-java=\"`pip`\"\u003e`pip`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`play`\" pulumi-lang-dotnet=\"`Play`\" pulumi-lang-go=\"`play`\" pulumi-lang-python=\"`play`\" pulumi-lang-yaml=\"`play`\" pulumi-lang-java=\"`play`\"\u003e`play`\u003c/span\u003e, `play-large`, \u003cspan pulumi-lang-nodejs=\"`progress`\" pulumi-lang-dotnet=\"`Progress`\" pulumi-lang-go=\"`progress`\" pulumi-lang-python=\"`progress`\" pulumi-lang-yaml=\"`progress`\" pulumi-lang-java=\"`progress`\"\u003e`progress`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rewind`\" pulumi-lang-dotnet=\"`Rewind`\" pulumi-lang-go=\"`rewind`\" pulumi-lang-python=\"`rewind`\" pulumi-lang-yaml=\"`rewind`\" pulumi-lang-java=\"`rewind`\"\u003e`rewind`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`settings`\" pulumi-lang-dotnet=\"`Settings`\" pulumi-lang-go=\"`settings`\" pulumi-lang-python=\"`settings`\" pulumi-lang-yaml=\"`settings`\" pulumi-lang-java=\"`settings`\"\u003e`settings`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`volume`\" pulumi-lang-dotnet=\"`Volume`\" pulumi-lang-go=\"`volume`\" pulumi-lang-python=\"`volume`\" pulumi-lang-yaml=\"`volume`\" pulumi-lang-java=\"`volume`\"\u003e`volume`\u003c/span\u003e"
                },
                "playerCustomHead": {
                    "type": "string",
                    "description": "Custom HTML to be included in the head of the video player."
                },
                "playerFontFamily": {
                    "type": "string",
                    "description": "Options: \u003cspan pulumi-lang-nodejs=\"`arial`\" pulumi-lang-dotnet=\"`Arial`\" pulumi-lang-go=\"`arial`\" pulumi-lang-python=\"`arial`\" pulumi-lang-yaml=\"`arial`\" pulumi-lang-java=\"`arial`\"\u003e`arial`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`inter`\" pulumi-lang-dotnet=\"`Inter`\" pulumi-lang-go=\"`inter`\" pulumi-lang-python=\"`inter`\" pulumi-lang-yaml=\"`inter`\" pulumi-lang-java=\"`inter`\"\u003e`inter`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lato`\" pulumi-lang-dotnet=\"`Lato`\" pulumi-lang-go=\"`lato`\" pulumi-lang-python=\"`lato`\" pulumi-lang-yaml=\"`lato`\" pulumi-lang-java=\"`lato`\"\u003e`lato`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`oswald`\" pulumi-lang-dotnet=\"`Oswald`\" pulumi-lang-go=\"`oswald`\" pulumi-lang-python=\"`oswald`\" pulumi-lang-yaml=\"`oswald`\" pulumi-lang-java=\"`oswald`\"\u003e`oswald`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`raleway`\" pulumi-lang-dotnet=\"`Raleway`\" pulumi-lang-go=\"`raleway`\" pulumi-lang-python=\"`raleway`\" pulumi-lang-yaml=\"`raleway`\" pulumi-lang-java=\"`raleway`\"\u003e`raleway`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`roboto`\" pulumi-lang-dotnet=\"`Roboto`\" pulumi-lang-go=\"`roboto`\" pulumi-lang-python=\"`roboto`\" pulumi-lang-yaml=\"`roboto`\" pulumi-lang-java=\"`roboto`\"\u003e`roboto`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rubik`\" pulumi-lang-dotnet=\"`Rubik`\" pulumi-lang-go=\"`rubik`\" pulumi-lang-python=\"`rubik`\" pulumi-lang-yaml=\"`rubik`\" pulumi-lang-java=\"`rubik`\"\u003e`rubik`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ubuntu`\" pulumi-lang-dotnet=\"`Ubuntu`\" pulumi-lang-go=\"`ubuntu`\" pulumi-lang-python=\"`ubuntu`\" pulumi-lang-yaml=\"`ubuntu`\" pulumi-lang-java=\"`ubuntu`\"\u003e`ubuntu`\u003c/span\u003e"
                },
                "playerLanguage": {
                    "type": "string",
                    "description": "Specifies the language for the video player interface."
                },
                "playerPrimaryColor": {
                    "type": "string",
                    "description": "Customizes the appearance of the video player."
                },
                "playerWatchtimeHeatmapEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the video watch heatmap should be displayed in the player."
                },
                "referersAlloweds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of allowed referrer domains allowed to access videos in this library."
                },
                "referersBlockeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of blocked referrer domains blocked from accessing videos in this library."
                },
                "resolutions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of resolutions available for the videos."
                },
                "transcribingEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether the automatic audio transcribing is currently enabled for this zone."
                },
                "transcribingLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of languages that the captions will be automatically transcribed to."
                },
                "transcribingSmartDescriptionEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether automatic transcribing description generation is currently enabled."
                },
                "transcribingSmartTitleEnabled": {
                    "type": "boolean",
                    "description": "Indicates whether automatic transcribing title generation is currently enabled."
                },
                "vastTagUrl": {
                    "type": "string",
                    "description": "The URL of the VAST tag for ad integration."
                },
                "viewTokenAuthenticationRequired": {
                    "type": "boolean",
                    "description": "Indicates whether the player token authentication is enabled"
                },
                "watermarkHeight": {
                    "type": "number",
                    "description": "The height of the watermark (in %)."
                },
                "watermarkPositionLeft": {
                    "type": "number",
                    "description": "The left offset of the watermark position (in %)."
                },
                "watermarkPositionTop": {
                    "type": "number",
                    "description": "The top offset of the watermark position (in %)."
                },
                "watermarkWidth": {
                    "type": "number",
                    "description": "The width of the watermark (in %)."
                },
                "webhookUrl": {
                    "type": "string",
                    "description": "The URL for webhook notifications."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StreamLibrary resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "The API key for accessing the stream library."
                    },
                    "bitrate1080p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 1080p videos, in kilobits per second."
                    },
                    "bitrate1440p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 1440p videos, in kilobits per second."
                    },
                    "bitrate2160p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 2160p videos, in kilobits per second."
                    },
                    "bitrate240p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 240p videos, in kilobits per second."
                    },
                    "bitrate360p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 360p videos, in kilobits per second."
                    },
                    "bitrate480p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 480p videos, in kilobits per second."
                    },
                    "bitrate720p": {
                        "type": "number",
                        "description": "The bitrate used for encoding 720p videos, in kilobits per second."
                    },
                    "cdnTokenAuthenticationRequired": {
                        "type": "boolean",
                        "description": "Indicates whether CDN token authentication is required."
                    },
                    "contentTaggingEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether content tagging is enabled."
                    },
                    "directPlayEnabled": {
                        "type": "boolean",
                        "description": "Determines direct play URLs are enabled."
                    },
                    "directUrlFileAccessBlocked": {
                        "type": "boolean",
                        "description": "Indicates whether the requests without a referrer are blocked."
                    },
                    "drmMediacageBasicEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the MediaCage basic DRM is enabled"
                    },
                    "earlyPlayEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the Early-Play feature is enabled."
                    },
                    "mp4FallbackEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the MP4 fallback feature is enabled."
                    },
                    "multiAudioTrackSupportEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether multiple output audio track support is enabled."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the stream library."
                    },
                    "originalFilesKeep": {
                        "type": "boolean",
                        "description": "Indicates whether to keep original files after encoding."
                    },
                    "playerCaptionsBackgroundColor": {
                        "type": "string",
                        "description": "The background color of the captions in the video player."
                    },
                    "playerCaptionsFontColor": {
                        "type": "string",
                        "description": "The font color of the captions in the video player."
                    },
                    "playerCaptionsFontSize": {
                        "type": "number",
                        "description": "The font size of the captions in the video player."
                    },
                    "playerControls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options: \u003cspan pulumi-lang-nodejs=\"`airplay`\" pulumi-lang-dotnet=\"`Airplay`\" pulumi-lang-go=\"`airplay`\" pulumi-lang-python=\"`airplay`\" pulumi-lang-yaml=\"`airplay`\" pulumi-lang-java=\"`airplay`\"\u003e`airplay`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captions`\" pulumi-lang-dotnet=\"`Captions`\" pulumi-lang-go=\"`captions`\" pulumi-lang-python=\"`captions`\" pulumi-lang-yaml=\"`captions`\" pulumi-lang-java=\"`captions`\"\u003e`captions`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`chromecast`\" pulumi-lang-dotnet=\"`Chromecast`\" pulumi-lang-go=\"`chromecast`\" pulumi-lang-python=\"`chromecast`\" pulumi-lang-yaml=\"`chromecast`\" pulumi-lang-java=\"`chromecast`\"\u003e`chromecast`\u003c/span\u003e, `current-time`, \u003cspan pulumi-lang-nodejs=\"`duration`\" pulumi-lang-dotnet=\"`Duration`\" pulumi-lang-go=\"`duration`\" pulumi-lang-python=\"`duration`\" pulumi-lang-yaml=\"`duration`\" pulumi-lang-java=\"`duration`\"\u003e`duration`\u003c/span\u003e, `fast-forward`, \u003cspan pulumi-lang-nodejs=\"`fullscreen`\" pulumi-lang-dotnet=\"`Fullscreen`\" pulumi-lang-go=\"`fullscreen`\" pulumi-lang-python=\"`fullscreen`\" pulumi-lang-yaml=\"`fullscreen`\" pulumi-lang-java=\"`fullscreen`\"\u003e`fullscreen`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mute`\" pulumi-lang-dotnet=\"`Mute`\" pulumi-lang-go=\"`mute`\" pulumi-lang-python=\"`mute`\" pulumi-lang-yaml=\"`mute`\" pulumi-lang-java=\"`mute`\"\u003e`mute`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pip`\" pulumi-lang-dotnet=\"`Pip`\" pulumi-lang-go=\"`pip`\" pulumi-lang-python=\"`pip`\" pulumi-lang-yaml=\"`pip`\" pulumi-lang-java=\"`pip`\"\u003e`pip`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`play`\" pulumi-lang-dotnet=\"`Play`\" pulumi-lang-go=\"`play`\" pulumi-lang-python=\"`play`\" pulumi-lang-yaml=\"`play`\" pulumi-lang-java=\"`play`\"\u003e`play`\u003c/span\u003e, `play-large`, \u003cspan pulumi-lang-nodejs=\"`progress`\" pulumi-lang-dotnet=\"`Progress`\" pulumi-lang-go=\"`progress`\" pulumi-lang-python=\"`progress`\" pulumi-lang-yaml=\"`progress`\" pulumi-lang-java=\"`progress`\"\u003e`progress`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rewind`\" pulumi-lang-dotnet=\"`Rewind`\" pulumi-lang-go=\"`rewind`\" pulumi-lang-python=\"`rewind`\" pulumi-lang-yaml=\"`rewind`\" pulumi-lang-java=\"`rewind`\"\u003e`rewind`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`settings`\" pulumi-lang-dotnet=\"`Settings`\" pulumi-lang-go=\"`settings`\" pulumi-lang-python=\"`settings`\" pulumi-lang-yaml=\"`settings`\" pulumi-lang-java=\"`settings`\"\u003e`settings`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`volume`\" pulumi-lang-dotnet=\"`Volume`\" pulumi-lang-go=\"`volume`\" pulumi-lang-python=\"`volume`\" pulumi-lang-yaml=\"`volume`\" pulumi-lang-java=\"`volume`\"\u003e`volume`\u003c/span\u003e"
                    },
                    "playerCustomHead": {
                        "type": "string",
                        "description": "Custom HTML to be included in the head of the video player."
                    },
                    "playerFontFamily": {
                        "type": "string",
                        "description": "Options: \u003cspan pulumi-lang-nodejs=\"`arial`\" pulumi-lang-dotnet=\"`Arial`\" pulumi-lang-go=\"`arial`\" pulumi-lang-python=\"`arial`\" pulumi-lang-yaml=\"`arial`\" pulumi-lang-java=\"`arial`\"\u003e`arial`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`inter`\" pulumi-lang-dotnet=\"`Inter`\" pulumi-lang-go=\"`inter`\" pulumi-lang-python=\"`inter`\" pulumi-lang-yaml=\"`inter`\" pulumi-lang-java=\"`inter`\"\u003e`inter`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lato`\" pulumi-lang-dotnet=\"`Lato`\" pulumi-lang-go=\"`lato`\" pulumi-lang-python=\"`lato`\" pulumi-lang-yaml=\"`lato`\" pulumi-lang-java=\"`lato`\"\u003e`lato`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`oswald`\" pulumi-lang-dotnet=\"`Oswald`\" pulumi-lang-go=\"`oswald`\" pulumi-lang-python=\"`oswald`\" pulumi-lang-yaml=\"`oswald`\" pulumi-lang-java=\"`oswald`\"\u003e`oswald`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`raleway`\" pulumi-lang-dotnet=\"`Raleway`\" pulumi-lang-go=\"`raleway`\" pulumi-lang-python=\"`raleway`\" pulumi-lang-yaml=\"`raleway`\" pulumi-lang-java=\"`raleway`\"\u003e`raleway`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`roboto`\" pulumi-lang-dotnet=\"`Roboto`\" pulumi-lang-go=\"`roboto`\" pulumi-lang-python=\"`roboto`\" pulumi-lang-yaml=\"`roboto`\" pulumi-lang-java=\"`roboto`\"\u003e`roboto`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rubik`\" pulumi-lang-dotnet=\"`Rubik`\" pulumi-lang-go=\"`rubik`\" pulumi-lang-python=\"`rubik`\" pulumi-lang-yaml=\"`rubik`\" pulumi-lang-java=\"`rubik`\"\u003e`rubik`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ubuntu`\" pulumi-lang-dotnet=\"`Ubuntu`\" pulumi-lang-go=\"`ubuntu`\" pulumi-lang-python=\"`ubuntu`\" pulumi-lang-yaml=\"`ubuntu`\" pulumi-lang-java=\"`ubuntu`\"\u003e`ubuntu`\u003c/span\u003e"
                    },
                    "playerLanguage": {
                        "type": "string",
                        "description": "Specifies the language for the video player interface."
                    },
                    "playerPrimaryColor": {
                        "type": "string",
                        "description": "Customizes the appearance of the video player."
                    },
                    "playerWatchtimeHeatmapEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the video watch heatmap should be displayed in the player."
                    },
                    "pullzone": {
                        "type": "number",
                        "description": "The ID of the linked pullzone."
                    },
                    "referersAlloweds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of allowed referrer domains allowed to access videos in this library."
                    },
                    "referersBlockeds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of blocked referrer domains blocked from accessing videos in this library."
                    },
                    "resolutions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of resolutions available for the videos."
                    },
                    "storageZone": {
                        "type": "number",
                        "description": "The ID of the linked storage zone."
                    },
                    "streamLibraryId": {
                        "type": "number"
                    },
                    "transcribingEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether the automatic audio transcribing is currently enabled for this zone."
                    },
                    "transcribingLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of languages that the captions will be automatically transcribed to."
                    },
                    "transcribingSmartDescriptionEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether automatic transcribing description generation is currently enabled."
                    },
                    "transcribingSmartTitleEnabled": {
                        "type": "boolean",
                        "description": "Indicates whether automatic transcribing title generation is currently enabled."
                    },
                    "vastTagUrl": {
                        "type": "string",
                        "description": "The URL of the VAST tag for ad integration."
                    },
                    "viewTokenAuthenticationRequired": {
                        "type": "boolean",
                        "description": "Indicates whether the player token authentication is enabled"
                    },
                    "watermarkHeight": {
                        "type": "number",
                        "description": "The height of the watermark (in %)."
                    },
                    "watermarkPositionLeft": {
                        "type": "number",
                        "description": "The left offset of the watermark position (in %)."
                    },
                    "watermarkPositionTop": {
                        "type": "number",
                        "description": "The top offset of the watermark position (in %)."
                    },
                    "watermarkWidth": {
                        "type": "number",
                        "description": "The width of the watermark (in %)."
                    },
                    "webhookUrl": {
                        "type": "string",
                        "description": "The URL for webhook notifications."
                    }
                },
                "type": "object"
            }
        },
        "bunnynet:index/streamVideo:StreamVideo": {
            "properties": {
                "chapters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/StreamVideoChapter:StreamVideoChapter"
                    },
                    "description": "The list of chapters available in the video."
                },
                "collection": {
                    "type": "string",
                    "description": "The ID of the collection to which the video belongs."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the video."
                },
                "library": {
                    "type": "number",
                    "description": "The ID of the stream library to which the video belongs."
                },
                "moments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/StreamVideoMoment:StreamVideoMoment"
                    },
                    "description": "The list of moments available in the video."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the video."
                }
            },
            "required": [
                "collection",
                "library",
                "title"
            ],
            "inputProperties": {
                "chapters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/StreamVideoChapter:StreamVideoChapter"
                    },
                    "description": "The list of chapters available in the video."
                },
                "collection": {
                    "type": "string",
                    "description": "The ID of the collection to which the video belongs."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the video."
                },
                "library": {
                    "type": "number",
                    "description": "The ID of the stream library to which the video belongs."
                },
                "moments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/bunnynet:index/StreamVideoMoment:StreamVideoMoment"
                    },
                    "description": "The list of moments available in the video."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the video."
                }
            },
            "requiredInputs": [
                "library",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StreamVideo resources.\n",
                "properties": {
                    "chapters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/bunnynet:index/StreamVideoChapter:StreamVideoChapter"
                        },
                        "description": "The list of chapters available in the video."
                    },
                    "collection": {
                        "type": "string",
                        "description": "The ID of the collection to which the video belongs."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the video."
                    },
                    "library": {
                        "type": "number",
                        "description": "The ID of the stream library to which the video belongs."
                    },
                    "moments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/bunnynet:index/StreamVideoMoment:StreamVideoMoment"
                        },
                        "description": "The list of moments available in the video."
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the video."
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "bunnynet:index/getDnsRecord:getDnsRecord": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecord.\n",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecord.\n",
                "properties": {
                    "accelerated": {
                        "type": "boolean"
                    },
                    "acceleratedPullzone": {
                        "type": "number"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "number"
                    },
                    "geolocationLat": {
                        "type": "number"
                    },
                    "geolocationLong": {
                        "type": "number"
                    },
                    "id": {
                        "type": "number"
                    },
                    "latencyZone": {
                        "type": "string"
                    },
                    "linkName": {
                        "type": "string"
                    },
                    "monitorType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "number"
                    },
                    "priority": {
                        "type": "number"
                    },
                    "smartRoutingType": {
                        "type": "string"
                    },
                    "tag": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "number"
                    },
                    "zone": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "accelerated",
                    "acceleratedPullzone",
                    "comment",
                    "enabled",
                    "flags",
                    "geolocationLat",
                    "geolocationLong",
                    "id",
                    "latencyZone",
                    "linkName",
                    "monitorType",
                    "name",
                    "port",
                    "priority",
                    "smartRoutingType",
                    "tag",
                    "ttl",
                    "type",
                    "value",
                    "weight",
                    "zone"
                ]
            }
        },
        "bunnynet:index/getDnsZone:getDnsZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsZone.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsZone.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "number"
                    },
                    "logAnonymized": {
                        "type": "boolean"
                    },
                    "logAnonymizedStyle": {
                        "type": "string"
                    },
                    "logEnabled": {
                        "type": "boolean"
                    },
                    "nameserver1": {
                        "type": "string"
                    },
                    "nameserver2": {
                        "type": "string"
                    },
                    "nameserverCustom": {
                        "type": "boolean"
                    },
                    "soaEmail": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain",
                    "id",
                    "logAnonymized",
                    "logAnonymizedStyle",
                    "logEnabled",
                    "nameserver1",
                    "nameserver2",
                    "nameserverCustom",
                    "soaEmail"
                ]
            }
        },
        "bunnynet:index/getRegion:getRegion": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegion.\n",
                "properties": {
                    "regionCode": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionCode"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegion.\n",
                "properties": {
                    "allowLatencyRouting": {
                        "type": "boolean"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pricePerGigabyte": {
                        "type": "number"
                    },
                    "regionCode": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "allowLatencyRouting",
                    "continentCode",
                    "countryCode",
                    "id",
                    "latitude",
                    "longitude",
                    "name",
                    "pricePerGigabyte",
                    "regionCode"
                ]
            }
        },
        "bunnynet:index/getVideoLanguage:getVideoLanguage": {
            "inputs": {
                "description": "A collection of arguments for invoking getVideoLanguage.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "code"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVideoLanguage.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource."
                    },
                    "name": {
                        "type": "string"
                    },
                    "supportPlayerTranslation": {
                        "type": "boolean"
                    },
                    "supportTranscribing": {
                        "type": "boolean"
                    },
                    "transcribingAccuracy": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "name",
                    "supportPlayerTranslation",
                    "supportTranscribing",
                    "transcribingAccuracy",
                    "id"
                ]
            }
        },
        "pulumi:providers:bunnynet/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:bunnynet/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    },
    "parameterization": {
        "baseProvider": {
            "name": "terraform-provider",
            "version": "0.0.0-dev"
        },
        "parameter": "eyJyZW1vdGUiOnsidXJsIjoicmVnaXN0cnkub3BlbnRvZnUub3JnL2J1bm55d2F5L2J1bm55bmV0IiwidmVyc2lvbiI6IjAuNS4xIn19"
    }
}