crosstests.testOutput{
	initialValue: cty.Value{
		ty: cty.Type{typeImpl: cty.typeObject{
			AttrTypes: map[string]cty.Type{"other": {
				typeImpl: cty.primitiveType{Kind: cty.primitiveTypeKind(83)},
			}},
		}},
		v: map[string]interface{}{"other": "other_value"},
	},
	changeValue: cty.Value{
		ty: cty.Type{typeImpl: cty.typeObject{AttrTypes: map[string]cty.Type{
			"other": {typeImpl: cty.primitiveType{
				Kind: cty.primitiveTypeKind(83),
			}},
		}}},
		v: map[string]interface{}{"other": "other_value_2"},
	},
	tfOut: `
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
+/- create replacement and then destroy

Terraform will perform the following actions:

  # crossprovider_test_res.example must be replaced
+/- resource "crossprovider_test_res" "example" {
      ~ computed = "computed_value" -> (known after apply)
      ~ id       = "r1" -> (known after apply)
      ~ other    = "other_value" -> "other_value_2" # forces replacement
    }

Plan: 1 to add, 0 to change, 1 to destroy.

`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
    +-crossprovider:index/testRes:TestRes: (replace)
        [id=r1]
        [urn=urn:pulumi:test::project::crossprovider:index/testRes:TestRes::example]
      ~ other: "other_value" => "other_value_2"
Resources:
    +-1 to replace
    1 unchanged
`,
	detailedDiff: map[string]interface{}{"other": map[string]interface{}{"kind": "UPDATE_REPLACE"}},
}
