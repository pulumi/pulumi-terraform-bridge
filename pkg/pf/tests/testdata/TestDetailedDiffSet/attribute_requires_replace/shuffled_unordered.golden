tfbridgetests.testOutput{
	initialValue: &[]string{
		"val2",
		"val3",
		"val1",
	},
	changeValue: &[]string{
		"val3",
		"val1",
		"val2",
	},
	tfOut: `
<<<<<<< HEAD
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
+/- create replacement and then destroy

Terraform will perform the following actions:

  # testprovider_test.res must be replaced
+/- resource "testprovider_test" "res" {
      ~ id  = "test-id" -> (known after apply)
      ~ key = [ # forces replacement
          - "val2",
            "val3",
            "val1",
          + "val2",
        ]
    }

Plan: 1 to add, 0 to change, 1 to destroy.

=======
No changes. Your infrastructure matches the configuration.

Terraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.
>>>>>>> master
`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
<<<<<<< HEAD
    +-testprovider:index/test:Test: (replace)
        [id=test-id]
        [urn=urn:pulumi:test::project::testprovider:index/test:Test::p]
      ~ id  : "test-id" => output<string>
      ~ keys: [
          ~ [0]: "val2" => "val3"
          ~ [1]: "val3" => "val1"
          ~ [2]: "val1" => "val2"
        ]
Resources:
    +-1 to replace
    1 unchanged
=======
Resources:
    2 unchanged
>>>>>>> master
`,
}
