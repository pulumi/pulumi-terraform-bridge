tests.testOutput{
	initialValue: &[]string{
		"val1",
		"val2",
		"val3",
		"val4",
	},
	changeValue: &[]string{
		"val5",
		"val6",
		"val1",
		"val2",
	},
	tfOut: `
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
+/- create replacement and then destroy

Terraform will perform the following actions:

  # crossprovider_test_res.example must be replaced
+/- resource "crossprovider_test_res" "example" {
      ~ id = "id" -> (known after apply)

      - test { # forces replacement
          - computed = "non-computed-val3" -> null
          - nested   = "val3" -> null
        }
      - test { # forces replacement
          - computed = "non-computed-val4" -> null
          - nested   = "val4" -> null
        }
      + test { # forces replacement
          + computed = "non-computed-val5"
          + nested   = "val5"
        }
      + test { # forces replacement
          + computed = "non-computed-val6"
          + nested   = "val6"
        }

        # (2 unchanged blocks hidden)
    }

Plan: 1 to add, 0 to change, 1 to destroy.

`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
    +-crossprovider:index/testRes:TestRes: (replace)
        [id=id]
        [urn=urn:pulumi:test::project::crossprovider:index/testRes:TestRes::example]
      ~ tests: [
          ~ [0]: {
                  + computed: "non-computed-val5"
                  + nested  : "val5"
                }
          ~ [1]: {
                  + computed: "non-computed-val6"
                  + nested  : "val6"
                }
          ~ [2]: {
                  - nested: "val3"
                }
          ~ [3]: {
                  - nested: "val4"
                }
        ]
Resources:
    +-1 to replace
    1 unchanged
`,
	detailedDiff: map[string]interface{}{
		"tests[0].computed": map[string]interface{}{},
		"tests[0].nested":   map[string]interface{}{"kind": "ADD_REPLACE"},
		"tests[1].computed": map[string]interface{}{},
		"tests[1].nested":   map[string]interface{}{"kind": "ADD_REPLACE"},
		"tests[2].nested":   map[string]interface{}{"kind": "DELETE_REPLACE"},
		"tests[3].nested":   map[string]interface{}{"kind": "DELETE_REPLACE"},
	},
}
