# 2024/06/17 12:52:46 TestFixedSchema [rapid] draw config1: 
# t0 := tftypes.Object{AttributeTypes: map[string]tftypes.Type{
#   "bool_prop": tftypes.Bool,
#   "id": tftypes.String,
# }}
# tftypes.NewValue(t0, map[string]tftypes.Value{
#   "bool_prop": tftypes.NewValue(tftypes.Bool, true),
#   "id": tftypes.NewValue(tftypes.String, "newId"),
# })
# 2024/06/17 12:52:46 TestFixedSchema Config1:
# 
# t0 := tftypes.Object{AttributeTypes: map[string]tftypes.Type{
#   "bool_prop": tftypes.Bool,
#   "id": tftypes.String,
# }}
# tftypes.NewValue(t0, map[string]tftypes.Value{
#   "bool_prop": tftypes.NewValue(tftypes.Bool, true),
#   "id": tftypes.NewValue(tftypes.String, "newId"),
# })
# 2024/06/17 12:52:46 TestFixedSchema [rapid] draw config2: 
# t0 := tftypes.Object{AttributeTypes: map[string]tftypes.Type{
#   "bool_prop": tftypes.Bool,
#   "id": tftypes.String,
# }}
# tftypes.NewValue(t0, map[string]tftypes.Value{
#   "bool_prop": tftypes.NewValue(tftypes.Bool, true),
#   "id": tftypes.NewValue(tftypes.String, "newId"),
# })
# 2024/06/17 12:52:46 TestFixedSchema Config2:
# 
# t0 := tftypes.Object{AttributeTypes: map[string]tftypes.Type{
#   "bool_prop": tftypes.Bool,
#   "id": tftypes.String,
# }}
# tftypes.NewValue(t0, map[string]tftypes.Value{
#   "bool_prop": tftypes.NewValue(tftypes.Bool, true),
#   "id": tftypes.NewValue(tftypes.String, "newId"),
# })
# 2024/06/17 12:52:46 TestFixedSchema infer object type: tftypes.Object["bool_prop":tftypes.Bool?]
# 
v0.4.8#10389988620603621497
0x0
0x0
0x0
0x0