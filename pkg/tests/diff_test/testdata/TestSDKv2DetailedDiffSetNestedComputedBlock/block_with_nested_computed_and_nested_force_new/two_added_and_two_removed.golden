tests.testOutput{
	initialValue: &[]string{
		"val1",
		"val2",
		"val3",
		"val4",
	},
	changeValue: &[]string{
		"val1",
		"val2",
		"val5",
		"val6",
	},
	tfOut: `
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
+/- create replacement and then destroy

Terraform will perform the following actions:

  # crossprovider_test_res.example must be replaced
+/- resource "crossprovider_test_res" "example" {
      ~ id = "id" -> (known after apply)

      - prop { # forces replacement
          - nested_prop = "val1" -> null
            # (1 unchanged attribute hidden)
        }
      - prop { # forces replacement
          - nested_prop = "val2" -> null
            # (1 unchanged attribute hidden)
        }
      - prop { # forces replacement
          - nested_prop = "val3" -> null
            # (1 unchanged attribute hidden)
        }
      - prop { # forces replacement
          - nested_prop = "val4" -> null
            # (1 unchanged attribute hidden)
        }
      + prop { # forces replacement
          + computed    = (known after apply)
          + nested_prop = "val1"
        }
      + prop { # forces replacement
          + computed    = (known after apply)
          + nested_prop = "val2"
        }
      + prop { # forces replacement
          + computed    = (known after apply)
          + nested_prop = "val5"
        }
      + prop { # forces replacement
          + computed    = (known after apply)
          + nested_prop = "val6"
        }
    }

Plan: 1 to add, 0 to change, 1 to destroy.

`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
    +-crossprovider:index/testRes:TestRes: (replace)
        [id=id]
        [urn=urn:pulumi:test::project::crossprovider:index/testRes:TestRes::example]
      ~ props: [
          ~ [2]: {
                  ~ nestedProp: "val3" => "val5"
                }
          ~ [3]: {
                  ~ nestedProp: "val4" => "val6"
                }
        ]
Resources:
    +-1 to replace
    1 unchanged
`,
	detailedDiff: map[string]interface{}{
		"props[2].computed":   map[string]interface{}{"kind": "UPDATE"},
		"props[2].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[3].computed":   map[string]interface{}{"kind": "UPDATE"},
		"props[3].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
	},
}
