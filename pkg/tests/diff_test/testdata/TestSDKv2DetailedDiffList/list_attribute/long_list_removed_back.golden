tests.testOutput{
	initialValue: &[]string{
		"value0",
		"value1",
		"value2",
		"value3",
		"value4",
		"value5",
		"value6",
		"value7",
		"value8",
		"value9",
		"value10",
		"value11",
		"value12",
		"value13",
		"value14",
		"value15",
		"value16",
		"value17",
		"value18",
		"value19",
		"value20",
	},
	changeValue: &[]string{
		"value0",
		"value1",
		"value2",
		"value3",
		"value4",
		"value5",
		"value6",
		"value7",
		"value8",
		"value9",
		"value10",
		"value11",
		"value12",
		"value13",
		"value14",
		"value15",
		"value16",
		"value17",
		"value18",
		"value19",
	},
	tfOut: `
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # crossprovider_test_res.example will be updated in-place
  ~ resource "crossprovider_test_res" "example" {
        id        = "newid"
      ~ list_attr = [
            # (19 unchanged elements hidden)
            "value19",
          - "value20",
        ]
    }

Plan: 0 to add, 1 to change, 0 to destroy.

`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
    ~ crossprovider:index/testRes:TestRes: (update)
        [id=newid]
        [urn=urn:pulumi:test::project::crossprovider:index/testRes:TestRes::example]
      ~ listAttrs: [
          - [20]: "value20"
        ]
Resources:
    ~ 1 to update
    1 unchanged
`,
	detailedDiff: map[string]interface{}{"listAttrs[20]": map[string]interface{}{"kind": "DELETE"}},
}
