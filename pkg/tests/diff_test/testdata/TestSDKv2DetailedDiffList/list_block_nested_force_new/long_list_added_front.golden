tests.testOutput{
	initialValue: &[]string{
		"value0",
		"value1",
		"value2",
		"value3",
		"value4",
		"value5",
		"value6",
		"value7",
		"value8",
		"value9",
		"value10",
		"value11",
		"value12",
		"value13",
		"value14",
		"value15",
		"value16",
		"value17",
		"value18",
		"value19",
	},
	changeValue: &[]string{
		"value20",
		"value0",
		"value1",
		"value2",
		"value3",
		"value4",
		"value5",
		"value6",
		"value7",
		"value8",
		"value9",
		"value10",
		"value11",
		"value12",
		"value13",
		"value14",
		"value15",
		"value16",
		"value17",
		"value18",
		"value19",
	},
	tfOut: `
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
+/- create replacement and then destroy

Terraform will perform the following actions:

  # crossprovider_test_res.example must be replaced
+/- resource "crossprovider_test_res" "example" {
      ~ id = "newid" -> (known after apply)

      ~ prop {
          ~ nested_prop = "value0" -> "value20" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value1" -> "value0" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value2" -> "value1" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value3" -> "value2" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value4" -> "value3" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value5" -> "value4" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value6" -> "value5" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value7" -> "value6" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value8" -> "value7" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value9" -> "value8" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value10" -> "value9" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value11" -> "value10" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value12" -> "value11" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value13" -> "value12" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value14" -> "value13" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value15" -> "value14" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value16" -> "value15" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value17" -> "value16" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value18" -> "value17" # forces replacement
        }
      ~ prop {
          ~ nested_prop = "value19" -> "value18" # forces replacement
        }
      + prop {
          + nested_prop = "value19" # forces replacement
        }
    }

Plan: 1 to add, 0 to change, 1 to destroy.

`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
    +-crossprovider:index/testRes:TestRes: (replace)
        [id=newid]
        [urn=urn:pulumi:test::project::crossprovider:index/testRes:TestRes::example]
      ~ props: [
          ~ [0]: {
                  ~ nestedProp: "value0" => "value20"
                }
          ~ [1]: {
                  ~ nestedProp: "value1" => "value0"
                }
          ~ [2]: {
                  ~ nestedProp: "value2" => "value1"
                }
          ~ [3]: {
                  ~ nestedProp: "value3" => "value2"
                }
          ~ [4]: {
                  ~ nestedProp: "value4" => "value3"
                }
          ~ [5]: {
                  ~ nestedProp: "value5" => "value4"
                }
          ~ [6]: {
                  ~ nestedProp: "value6" => "value5"
                }
          ~ [7]: {
                  ~ nestedProp: "value7" => "value6"
                }
          ~ [8]: {
                  ~ nestedProp: "value8" => "value7"
                }
          ~ [9]: {
                  ~ nestedProp: "value9" => "value8"
                }
          ~ [10]: {
                  ~ nestedProp: "value10" => "value9"
                }
          ~ [11]: {
                  ~ nestedProp: "value11" => "value10"
                }
          ~ [12]: {
                  ~ nestedProp: "value12" => "value11"
                }
          ~ [13]: {
                  ~ nestedProp: "value13" => "value12"
                }
          ~ [14]: {
                  ~ nestedProp: "value14" => "value13"
                }
          ~ [15]: {
                  ~ nestedProp: "value15" => "value14"
                }
          ~ [16]: {
                  ~ nestedProp: "value16" => "value15"
                }
          ~ [17]: {
                  ~ nestedProp: "value17" => "value16"
                }
          ~ [18]: {
                  ~ nestedProp: "value18" => "value17"
                }
          ~ [19]: {
                  ~ nestedProp: "value19" => "value18"
                }
          + [20]: {
                  + nestedProp: "value19"
                }
        ]
Resources:
    +-1 to replace
    1 unchanged
`,
	detailedDiff: map[string]interface{}{
		"props[0].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[10].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[11].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[12].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[13].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[14].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[15].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[16].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[17].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[18].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[19].nestedProp": map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[1].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[20]":            map[string]interface{}{"kind": "ADD_REPLACE"},
		"props[2].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[3].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[4].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[5].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[6].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[7].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[8].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
		"props[9].nestedProp":  map[string]interface{}{"kind": "UPDATE_REPLACE"},
	},
}
