tests.testOutput{
	initialValue: &[]string{
		"val2",
		"val3",
	},
	changeValue: &[]string{
		"val2",
		"val3",
		"val1",
	},
	tfOut: `
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
+/- create replacement and then destroy

Terraform will perform the following actions:

  # crossprovider_test_res.example must be replaced
+/- resource "crossprovider_test_res" "example" {
      ~ id   = "id" -> (known after apply)
      ~ test = [ # forces replacement
          + "val1",
            # (2 unchanged elements hidden)
        ]
    }

Plan: 1 to add, 0 to change, 1 to destroy.

`,
	pulumiOut: `Previewing update (test):
  pulumi:pulumi:Stack: (same)
    [urn=urn:pulumi:test::project::pulumi:pulumi:Stack::project-test]
    +-crossprovider:index/testRes:TestRes: (replace)
        [id=id]
        [urn=urn:pulumi:test::project::crossprovider:index/testRes:TestRes::example]
      ~ tests: [
          + [2]: "val1"
        ]
Resources:
    +-1 to replace
    1 unchanged
`,
	detailedDiff: map[string]interface{}{"tests[2]": map[string]interface{}{"kind": "ADD_REPLACE"}},
}
