{
    "name": "random",
    "description": "A Pulumi package to safely use randomness in Pulumi programs.",
    "keywords": [
        "pulumi",
        "random"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`random` Terraform Provider](https://github.com/terraform-providers/terraform-provider-random).",
    "repository": "https://github.com/pulumi/pulumi-random",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "random": "Random"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-random/sdk/v4/go/random"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package to safely use randomness in Pulumi programs.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-random)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-random` repo](https://github.com/pulumi/pulumi-random/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-random` repo](https://github.com/terraform-providers/terraform-provider-random/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-random)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-random` repo](https://github.com/pulumi/pulumi-random/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-random` repo](https://github.com/terraform-providers/terraform-provider-random/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {},
    "provider": {
        "description": "The provider type for the random package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "random:index/randomId:RandomId": {
            "description": "The resource `random.RandomId` generates random numbers that are intended to be\nused as unique identifiers for other resources.\n\nThis resource *does* use a cryptographic random number generator in order\nto minimize the chance of collisions, making the results of this resource\nwhen a 16-byte identifier is requested of equivalent uniqueness to a\ntype-4 UUID.\n\nThis resource can be used in conjunction with resources that have\nthe `create_before_destroy` lifecycle flag set to avoid conflicts with\nunique names during the brief period where both the old and new resources\nexist concurrently.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how to generate a unique name for an AWS EC2\ninstance that changes each time a new AMI id is selected.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as random from \"@pulumi/random\";\n\nconst serverRandomId = new random.RandomId(\"server\", {\n    byteLength: 8,\n    keepers: {\n        // Generate a new id each time we switch to a new AMI id\n        ami_id: var_ami_id,\n    },\n});\nconst serverInstance = new aws.ec2.Instance(\"server\", {\n    ami: serverRandomId.keepers.apply(keepers =\u003e keepers.amiId),\n    tags: {\n        Name: pulumi.interpolate`web-server ${serverRandomId.hex}`,\n    },\n});\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var serverRandomId = new Random.RandomId(\"serverRandomId\", new()\n    {\n        ByteLength = 8,\n        Keepers = \n        {\n            { \"ami_id\", @var.Ami_id },\n        },\n    });\n\n    var serverInstance = new Aws.Ec2.Instance(\"serverInstance\", new()\n    {\n        Ami = serverRandomId.Keepers.Apply(keepers =\u003e keepers?.AmiId),\n        Tags = \n        {\n            { \"Name\", serverRandomId.Hex.Apply(hex =\u003e $\"web-server {hex}\") },\n        },\n    });\n\n});\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomId;\nimport com.pulumi.random.RandomIdArgs;\nimport com.pulumi.aws.ec2.Instance;\nimport com.pulumi.aws.ec2.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var serverRandomId = new RandomId(\"serverRandomId\", RandomIdArgs.builder()        \n            .byteLength(8)\n            .keepers(Map.of(\"ami_id\", var_.ami_id()))\n            .build());\n\n        var serverInstance = new Instance(\"serverInstance\", InstanceArgs.builder()        \n            .ami(serverRandomId.keepers().applyValue(keepers -\u003e keepers.amiId()))\n            .tags(Map.of(\"Name\", serverRandomId.hex().applyValue(hex -\u003e String.format(\"web-server %s\", hex))))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  serverRandomId:\n    type: random:RandomId\n    properties:\n      byteLength: 8\n      keepers:\n        ami_id: ${var.ami_id}\n  serverInstance:\n    type: aws:ec2:Instance\n    properties:\n      # Read the AMI id \"through\" the random_id resource to ensure that\n      #     // both will change together.\n      ami: ${serverRandomId.keepers.amiId}\n      tags:\n        Name: web-server ${serverRandomId.hex}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRandom Ids can be imported using the `b64_url` with an optional `prefix`. This can be used to replace a config value with a value interpolated from the random provider without experiencing diffs. Example with no prefix\n\n```sh\n $ pulumi import random:index/randomId:RandomId server p-9hUg\n```\n\n Example with prefix (prefix is separated by a `,`)\n\n```sh\n $ pulumi import random:index/randomId:RandomId server my-prefix-,p-9hUg\n```\n\n ",
            "properties": {
                "b64Std": {
                    "type": "string",
                    "description": "The generated id presented in base64 without additional transformations.\n"
                },
                "b64Url": {
                    "type": "string",
                    "description": "The generated id presented in base64, using the URL-friendly character set: case-sensitive letters, digits and the characters `_` and `-`.\n"
                },
                "byteLength": {
                    "type": "integer",
                    "description": "The number of random bytes to produce. The\nminimum value is 1, which produces eight bits of randomness.\n"
                },
                "dec": {
                    "type": "string",
                    "description": "The generated id presented in non-padded decimal digits.\n"
                },
                "hex": {
                    "type": "string",
                    "description": "The generated id presented in padded hexadecimal digits. This result will always be twice as long as the requested byte length.\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Arbitrary string to prefix the output value with. This\nstring is supplied as-is, meaning it is not guaranteed to be URL-safe or\nbase64 encoded.\n"
                }
            },
            "required": [
                "b64Std",
                "b64Url",
                "byteLength",
                "dec",
                "hex"
            ],
            "inputProperties": {
                "byteLength": {
                    "type": "integer",
                    "description": "The number of random bytes to produce. The\nminimum value is 1, which produces eight bits of randomness.\n",
                    "willReplaceOnChanges": true
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                    "willReplaceOnChanges": true
                },
                "prefix": {
                    "type": "string",
                    "description": "Arbitrary string to prefix the output value with. This\nstring is supplied as-is, meaning it is not guaranteed to be URL-safe or\nbase64 encoded.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "byteLength"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomId resources.\n",
                "properties": {
                    "b64Std": {
                        "type": "string",
                        "description": "The generated id presented in base64 without additional transformations.\n"
                    },
                    "b64Url": {
                        "type": "string",
                        "description": "The generated id presented in base64, using the URL-friendly character set: case-sensitive letters, digits and the characters `_` and `-`.\n"
                    },
                    "byteLength": {
                        "type": "integer",
                        "description": "The number of random bytes to produce. The\nminimum value is 1, which produces eight bits of randomness.\n",
                        "willReplaceOnChanges": true
                    },
                    "dec": {
                        "type": "string",
                        "description": "The generated id presented in non-padded decimal digits.\n"
                    },
                    "hex": {
                        "type": "string",
                        "description": "The generated id presented in padded hexadecimal digits. This result will always be twice as long as the requested byte length.\n"
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Arbitrary string to prefix the output value with. This\nstring is supplied as-is, meaning it is not guaranteed to be URL-safe or\nbase64 encoded.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "random:index/randomInteger:RandomInteger": {
            "description": "The resource `random.RandomInteger` generates random values from a given range, described by the `min` and `max` attributes of a given resource.\n\nThis resource can be used in conjunction with resources that have\nthe `create_before_destroy` lifecycle flag set, to avoid conflicts with\nunique names during the brief period where both the old and new resources\nexist concurrently.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how to generate a random priority between 1 and 50000 for\na `aws_alb_listener_rule` resource:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as random from \"@pulumi/random\";\n\nconst priority = new random.RandomInteger(\"priority\", {\n    keepers: {\n        // Generate a new integer each time we switch to a new listener ARN\n        listener_arn: var_listener_arn,\n    },\n    max: 50000,\n    min: 1,\n});\nconst main = new aws.alb.ListenerRule(\"main\", {\n    actions: [{\n        targetGroupArn: var_target_group_arn,\n        type: \"forward\",\n    }],\n    listenerArn: var_listener_arn,\n    priority: priority.result,\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_random as random\n\npriority = random.RandomInteger(\"priority\",\n    keepers={\n        \"listener_arn\": var[\"listener_arn\"],\n    },\n    max=50000,\n    min=1)\nmain = aws.alb.ListenerRule(\"main\",\n    actions=[aws.alb.ListenerRuleActionArgs(\n        target_group_arn=var[\"target_group_arn\"],\n        type=\"forward\",\n    )],\n    listener_arn=var[\"listener_arn\"],\n    priority=priority.result)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var priority = new Random.RandomInteger(\"priority\", new()\n    {\n        Keepers = \n        {\n            { \"listener_arn\", @var.Listener_arn },\n        },\n        Max = 50000,\n        Min = 1,\n    });\n\n    var main = new Aws.Alb.ListenerRule(\"main\", new()\n    {\n        Actions = new[]\n        {\n            new Aws.Alb.Inputs.ListenerRuleActionArgs\n            {\n                TargetGroupArn = @var.Target_group_arn,\n                Type = \"forward\",\n            },\n        },\n        ListenerArn = @var.Listener_arn,\n        Priority = priority.Result,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/alb\"\n\t\"github.com/pulumi/pulumi-random/sdk/v4/go/random\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpriority, err := random.NewRandomInteger(ctx, \"priority\", \u0026random.RandomIntegerArgs{\n\t\t\tKeepers: pulumi.AnyMap{\n\t\t\t\t\"listener_arn\": pulumi.Any(_var.Listener_arn),\n\t\t\t},\n\t\t\tMax: pulumi.Int(50000),\n\t\t\tMin: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = alb.NewListenerRule(ctx, \"main\", \u0026alb.ListenerRuleArgs{\n\t\t\tActions: alb.ListenerRuleActionArray{\n\t\t\t\t\u0026alb.ListenerRuleActionArgs{\n\t\t\t\t\tTargetGroupArn: pulumi.Any(_var.Target_group_arn),\n\t\t\t\t\tType:           pulumi.String(\"forward\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tListenerArn: pulumi.Any(_var.Listener_arn),\n\t\t\tPriority:    priority.Result,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomInteger;\nimport com.pulumi.random.RandomIntegerArgs;\nimport com.pulumi.aws.alb.ListenerRule;\nimport com.pulumi.aws.alb.ListenerRuleArgs;\nimport com.pulumi.aws.alb.inputs.ListenerRuleActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var priority = new RandomInteger(\"priority\", RandomIntegerArgs.builder()        \n            .keepers(Map.of(\"listener_arn\", var_.listener_arn()))\n            .max(50000)\n            .min(1)\n            .build());\n\n        var main = new ListenerRule(\"main\", ListenerRuleArgs.builder()        \n            .actions(ListenerRuleActionArgs.builder()\n                .targetGroupArn(var_.target_group_arn())\n                .type(\"forward\")\n                .build())\n            .listenerArn(var_.listener_arn())\n            .priority(priority.result())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  priority:\n    type: random:RandomInteger\n    properties:\n      keepers:\n        listener_arn: ${var.listener_arn}\n      max: 50000\n      min: 1\n  main:\n    type: aws:alb:ListenerRule\n    properties:\n      actions:\n        - targetGroupArn: ${var.target_group_arn}\n          type: forward\n      listenerArn: ${var.listener_arn}\n      priority: ${priority.result}\n```\n\nThe result of the above will set a random priority.\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRandom integers can be imported using the `result`, `min`, and `max`, with an optional `seed`. This can be used to replace a config value with a value interpolated from the random provider without experiencing diffs. Example (values are separated by a `,`)\n\n```sh\n $ pulumi import random:index/randomInteger:RandomInteger priority 15390,1,50000\n```\n\n ",
            "properties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n"
                },
                "max": {
                    "type": "integer",
                    "description": "The maximum inclusive value of the range.\n"
                },
                "min": {
                    "type": "integer",
                    "description": "The minimum inclusive value of the range.\n"
                },
                "result": {
                    "type": "integer",
                    "description": "(int) The random Integer result.\n"
                },
                "seed": {
                    "type": "string",
                    "description": "A custom seed to always produce the same value.\n"
                }
            },
            "required": [
                "max",
                "min",
                "result"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                    "willReplaceOnChanges": true
                },
                "max": {
                    "type": "integer",
                    "description": "The maximum inclusive value of the range.\n",
                    "willReplaceOnChanges": true
                },
                "min": {
                    "type": "integer",
                    "description": "The minimum inclusive value of the range.\n",
                    "willReplaceOnChanges": true
                },
                "seed": {
                    "type": "string",
                    "description": "A custom seed to always produce the same value.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "max",
                "min"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomInteger resources.\n",
                "properties": {
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "max": {
                        "type": "integer",
                        "description": "The maximum inclusive value of the range.\n",
                        "willReplaceOnChanges": true
                    },
                    "min": {
                        "type": "integer",
                        "description": "The minimum inclusive value of the range.\n",
                        "willReplaceOnChanges": true
                    },
                    "result": {
                        "type": "integer",
                        "description": "(int) The random Integer result.\n"
                    },
                    "seed": {
                        "type": "string",
                        "description": "A custom seed to always produce the same value.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "random:index/randomPassword:RandomPassword": {
            "description": "\u003e **Note:** Requires random provider version \u003e= 2.2.0\n\nIdentical to random.RandomString with the exception that the\nresult is treated as sensitive and, thus, _not_ displayed in console output.\n\n\u003e **Note:** All attributes including the generated password will be stored in\nthe raw state as plain-text. [Read more about sensitive data in\nstate](https://www.terraform.io/docs/state/sensitive-data.html).\n\nThis resource *does* use a cryptographic random number generator.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as random from \"@pulumi/random\";\n\nconst password = new random.RandomPassword(\"password\", {\n    length: 16,\n    special: true,\n    overrideSpecial: `_%@`,\n});\nconst example = new aws.rds.Instance(\"example\", {\n    instanceClass: \"db.t3.micro\",\n    allocatedStorage: 64,\n    engine: \"mysql\",\n    username: \"someone\",\n    password: password.result,\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_random as random\n\npassword = random.RandomPassword(\"password\",\n    length=16,\n    special=True,\n    override_special=\"_%@\")\nexample = aws.rds.Instance(\"example\",\n    instance_class=\"db.t3.micro\",\n    allocated_storage=64,\n    engine=\"mysql\",\n    username=\"someone\",\n    password=password.result)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var password = new Random.RandomPassword(\"password\", new()\n    {\n        Length = 16,\n        Special = true,\n        OverrideSpecial = \"_%@\",\n    });\n\n    var example = new Aws.Rds.Instance(\"example\", new()\n    {\n        InstanceClass = \"db.t3.micro\",\n        AllocatedStorage = 64,\n        Engine = \"mysql\",\n        Username = \"someone\",\n        Password = password.Result,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/rds\"\n\t\"github.com/pulumi/pulumi-random/sdk/v4/go/random\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpassword, err := random.NewRandomPassword(ctx, \"password\", \u0026random.RandomPasswordArgs{\n\t\t\tLength:          pulumi.Int(16),\n\t\t\tSpecial:         pulumi.Bool(true),\n\t\t\tOverrideSpecial: pulumi.String(fmt.Sprintf(\"_%v@\", \"%\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = rds.NewInstance(ctx, \"example\", \u0026rds.InstanceArgs{\n\t\t\tInstanceClass:    pulumi.String(\"db.t3.micro\"),\n\t\t\tAllocatedStorage: pulumi.Int(64),\n\t\t\tEngine:           pulumi.String(\"mysql\"),\n\t\t\tUsername:         pulumi.String(\"someone\"),\n\t\t\tPassword:         password.Result,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomPassword;\nimport com.pulumi.random.RandomPasswordArgs;\nimport com.pulumi.aws.rds.Instance;\nimport com.pulumi.aws.rds.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var password = new RandomPassword(\"password\", RandomPasswordArgs.builder()        \n            .length(16)\n            .special(true)\n            .overrideSpecial(\"_%@\")\n            .build());\n\n        var example = new Instance(\"example\", InstanceArgs.builder()        \n            .instanceClass(\"db.t3.micro\")\n            .allocatedStorage(64)\n            .engine(\"mysql\")\n            .username(\"someone\")\n            .password(password.result())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  password:\n    type: random:RandomPassword\n    properties:\n      length: 16\n      special: true\n      overrideSpecial: _%@\n  example:\n    type: aws:rds:Instance\n    properties:\n      instanceClass: db.t3.micro\n      allocatedStorage: 64\n      engine: mysql\n      username: someone\n      password: ${password.result}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRandom Password can be imported by specifying the value of the string\n\n```sh\n $ pulumi import random:index/randomPassword:RandomPassword password securepassword\n```\n\n ",
            "properties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. See [the main provider\ndocumentation](../index.html) for more information.\n"
                },
                "length": {
                    "type": "integer",
                    "description": "The length of the string desired.\n"
                },
                "lower": {
                    "type": "boolean",
                    "description": "Include lowercase alphabet characters in the result.\n"
                },
                "minLower": {
                    "type": "integer",
                    "description": "Minimum number of lowercase alphabet characters in the result.\n"
                },
                "minNumeric": {
                    "type": "integer",
                    "description": "Minimum number of numeric characters in the result.\n"
                },
                "minSpecial": {
                    "type": "integer",
                    "description": "Minimum number of special characters in the result.\n"
                },
                "minUpper": {
                    "type": "integer",
                    "description": "Minimum number of uppercase alphabet characters in the result.\n"
                },
                "number": {
                    "type": "boolean",
                    "description": "Include numeric characters in the result.\n"
                },
                "overrideSpecial": {
                    "type": "string",
                    "description": "Supply your own list of special characters to use for string generation. This overrides the default character list in\nthe special argument. The `special` argument must still be set to true for any overwritten characters to be used in\ngeneration.\n"
                },
                "result": {
                    "type": "string",
                    "description": "The generated random string.\n"
                },
                "special": {
                    "type": "boolean",
                    "description": "Include special characters in the result. These are `!@#$%\u0026*()-_=+[]{}\u003c\u003e:?`\n"
                },
                "upper": {
                    "type": "boolean",
                    "description": "Include uppercase alphabet characters in the result.\n"
                }
            },
            "required": [
                "length",
                "result"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. See [the main provider\ndocumentation](../index.html) for more information.\n",
                    "willReplaceOnChanges": true
                },
                "length": {
                    "type": "integer",
                    "description": "The length of the string desired.\n",
                    "willReplaceOnChanges": true
                },
                "lower": {
                    "type": "boolean",
                    "description": "Include lowercase alphabet characters in the result.\n",
                    "willReplaceOnChanges": true
                },
                "minLower": {
                    "type": "integer",
                    "description": "Minimum number of lowercase alphabet characters in the result.\n",
                    "willReplaceOnChanges": true
                },
                "minNumeric": {
                    "type": "integer",
                    "description": "Minimum number of numeric characters in the result.\n",
                    "willReplaceOnChanges": true
                },
                "minSpecial": {
                    "type": "integer",
                    "description": "Minimum number of special characters in the result.\n",
                    "willReplaceOnChanges": true
                },
                "minUpper": {
                    "type": "integer",
                    "description": "Minimum number of uppercase alphabet characters in the result.\n",
                    "willReplaceOnChanges": true
                },
                "number": {
                    "type": "boolean",
                    "description": "Include numeric characters in the result.\n",
                    "willReplaceOnChanges": true
                },
                "overrideSpecial": {
                    "type": "string",
                    "description": "Supply your own list of special characters to use for string generation. This overrides the default character list in\nthe special argument. The `special` argument must still be set to true for any overwritten characters to be used in\ngeneration.\n",
                    "willReplaceOnChanges": true
                },
                "special": {
                    "type": "boolean",
                    "description": "Include special characters in the result. These are `!@#$%\u0026*()-_=+[]{}\u003c\u003e:?`\n",
                    "willReplaceOnChanges": true
                },
                "upper": {
                    "type": "boolean",
                    "description": "Include uppercase alphabet characters in the result.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "length"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomPassword resources.\n",
                "properties": {
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. See [the main provider\ndocumentation](../index.html) for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "length": {
                        "type": "integer",
                        "description": "The length of the string desired.\n",
                        "willReplaceOnChanges": true
                    },
                    "lower": {
                        "type": "boolean",
                        "description": "Include lowercase alphabet characters in the result.\n",
                        "willReplaceOnChanges": true
                    },
                    "minLower": {
                        "type": "integer",
                        "description": "Minimum number of lowercase alphabet characters in the result.\n",
                        "willReplaceOnChanges": true
                    },
                    "minNumeric": {
                        "type": "integer",
                        "description": "Minimum number of numeric characters in the result.\n",
                        "willReplaceOnChanges": true
                    },
                    "minSpecial": {
                        "type": "integer",
                        "description": "Minimum number of special characters in the result.\n",
                        "willReplaceOnChanges": true
                    },
                    "minUpper": {
                        "type": "integer",
                        "description": "Minimum number of uppercase alphabet characters in the result.\n",
                        "willReplaceOnChanges": true
                    },
                    "number": {
                        "type": "boolean",
                        "description": "Include numeric characters in the result.\n",
                        "willReplaceOnChanges": true
                    },
                    "overrideSpecial": {
                        "type": "string",
                        "description": "Supply your own list of special characters to use for string generation. This overrides the default character list in\nthe special argument. The `special` argument must still be set to true for any overwritten characters to be used in\ngeneration.\n",
                        "willReplaceOnChanges": true
                    },
                    "result": {
                        "type": "string",
                        "description": "The generated random string.\n"
                    },
                    "special": {
                        "type": "boolean",
                        "description": "Include special characters in the result. These are `!@#$%\u0026*()-_=+[]{}\u003c\u003e:?`\n",
                        "willReplaceOnChanges": true
                    },
                    "upper": {
                        "type": "boolean",
                        "description": "Include uppercase alphabet characters in the result.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "random:index/randomPet:RandomPet": {
            "description": "The resource `random.RandomPet` generates random pet names that are intended to be\nused as unique identifiers for other resources.\n\nThis resource can be used in conjunction with resources that have\nthe `create_before_destroy` lifecycle flag set, to avoid conflicts with\nunique names during the brief period where both the old and new resources\nexist concurrently.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how to generate a unique pet name for an AWS EC2\ninstance that changes each time a new AMI id is selected.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as random from \"@pulumi/random\";\n\nconst serverRandomPet = new random.RandomPet(\"server\", {\n    keepers: {\n        // Generate a new pet name each time we switch to a new AMI id\n        ami_id: var_ami_id,\n    },\n});\nconst serverInstance = new aws.ec2.Instance(\"server\", {\n    ami: serverRandomPet.keepers.apply(keepers =\u003e keepers.amiId),\n    tags: {\n        Name: pulumi.interpolate`web-server-${serverRandomPet.id}`,\n    },\n});\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var serverRandomPet = new Random.RandomPet(\"serverRandomPet\", new()\n    {\n        Keepers = \n        {\n            { \"ami_id\", @var.Ami_id },\n        },\n    });\n\n    var serverInstance = new Aws.Ec2.Instance(\"serverInstance\", new()\n    {\n        Ami = serverRandomPet.Keepers.Apply(keepers =\u003e keepers?.AmiId),\n        Tags = \n        {\n            { \"Name\", serverRandomPet.Id.Apply(id =\u003e $\"web-server-{id}\") },\n        },\n    });\n\n});\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomPet;\nimport com.pulumi.random.RandomPetArgs;\nimport com.pulumi.aws.ec2.Instance;\nimport com.pulumi.aws.ec2.InstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var serverRandomPet = new RandomPet(\"serverRandomPet\", RandomPetArgs.builder()        \n            .keepers(Map.of(\"ami_id\", var_.ami_id()))\n            .build());\n\n        var serverInstance = new Instance(\"serverInstance\", InstanceArgs.builder()        \n            .ami(serverRandomPet.keepers().applyValue(keepers -\u003e keepers.amiId()))\n            .tags(Map.of(\"Name\", serverRandomPet.id().applyValue(id -\u003e String.format(\"web-server-%s\", id))))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  serverRandomPet:\n    type: random:RandomPet\n    properties:\n      keepers:\n        ami_id: ${var.ami_id}\n  serverInstance:\n    type: aws:ec2:Instance\n    properties:\n      # Read the AMI id \"through\" the random_pet resource to ensure that\n      #     // both will change together.\n      ami: ${serverRandomPet.keepers.amiId}\n      tags:\n        Name: web-server-${serverRandomPet.id}\n```\n\nThe result of the above will set the Name of the AWS Instance to\n`web-server-simple-snake`.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n"
                },
                "length": {
                    "type": "integer",
                    "description": "The length (in words) of the pet name.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "A string to prefix the name with.\n"
                },
                "separator": {
                    "type": "string",
                    "description": "The character to separate words in the pet name.\n"
                }
            },
            "inputProperties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                    "willReplaceOnChanges": true
                },
                "length": {
                    "type": "integer",
                    "description": "The length (in words) of the pet name.\n",
                    "willReplaceOnChanges": true
                },
                "prefix": {
                    "type": "string",
                    "description": "A string to prefix the name with.\n",
                    "willReplaceOnChanges": true
                },
                "separator": {
                    "type": "string",
                    "description": "The character to separate words in the pet name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomPet resources.\n",
                "properties": {
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "length": {
                        "type": "integer",
                        "description": "The length (in words) of the pet name.\n",
                        "willReplaceOnChanges": true
                    },
                    "prefix": {
                        "type": "string",
                        "description": "A string to prefix the name with.\n",
                        "willReplaceOnChanges": true
                    },
                    "separator": {
                        "type": "string",
                        "description": "The character to separate words in the pet name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "random:index/randomShuffle:RandomShuffle": {
            "description": "The resource `random.RandomShuffle` generates a random permutation of a list\nof strings given as an argument.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as random from \"@pulumi/random\";\n\nconst az = new random.RandomShuffle(\"az\", {\n    inputs: [\n        \"us-west-1a\",\n        \"us-west-1c\",\n        \"us-west-1d\",\n        \"us-west-1e\",\n    ],\n    resultCount: 2,\n});\nconst example = new aws.elb.LoadBalancer(\"example\", {\n    // Place the ELB in any two of the given availability zones, selected\n    // at random.\n    availabilityZones: az.results,\n});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_random as random\n\naz = random.RandomShuffle(\"az\",\n    inputs=[\n        \"us-west-1a\",\n        \"us-west-1c\",\n        \"us-west-1d\",\n        \"us-west-1e\",\n    ],\n    result_count=2)\nexample = aws.elb.LoadBalancer(\"example\", availability_zones=az.results)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var az = new Random.RandomShuffle(\"az\", new()\n    {\n        Inputs = new[]\n        {\n            \"us-west-1a\",\n            \"us-west-1c\",\n            \"us-west-1d\",\n            \"us-west-1e\",\n        },\n        ResultCount = 2,\n    });\n\n    var example = new Aws.Elb.LoadBalancer(\"example\", new()\n    {\n        AvailabilityZones = az.Results,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/elb\"\n\t\"github.com/pulumi/pulumi-random/sdk/v4/go/random\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\taz, err := random.NewRandomShuffle(ctx, \"az\", \u0026random.RandomShuffleArgs{\n\t\t\tInputs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-west-1a\"),\n\t\t\t\tpulumi.String(\"us-west-1c\"),\n\t\t\t\tpulumi.String(\"us-west-1d\"),\n\t\t\t\tpulumi.String(\"us-west-1e\"),\n\t\t\t},\n\t\t\tResultCount: pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = elb.NewLoadBalancer(ctx, \"example\", \u0026elb.LoadBalancerArgs{\n\t\t\tAvailabilityZones: az.Results,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomShuffle;\nimport com.pulumi.random.RandomShuffleArgs;\nimport com.pulumi.aws.elb.LoadBalancer;\nimport com.pulumi.aws.elb.LoadBalancerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var az = new RandomShuffle(\"az\", RandomShuffleArgs.builder()        \n            .inputs(            \n                \"us-west-1a\",\n                \"us-west-1c\",\n                \"us-west-1d\",\n                \"us-west-1e\")\n            .resultCount(2)\n            .build());\n\n        var example = new LoadBalancer(\"example\", LoadBalancerArgs.builder()        \n            .availabilityZones(az.results())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  az:\n    type: random:RandomShuffle\n    properties:\n      inputs:\n        - us-west-1a\n        - us-west-1c\n        - us-west-1d\n        - us-west-1e\n      resultCount: 2\n  example:\n    type: aws:elb:LoadBalancer\n    properties:\n      # Place the ELB in any two of the given availability zones, selected\n      #     // at random.\n      availabilityZones: ${az.results}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of strings to shuffle.\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n"
                },
                "resultCount": {
                    "type": "integer",
                    "description": "The number of results to return. Defaults to\nthe number of items in the `input` list. If fewer items are requested,\nsome elements will be excluded from the result. If more items are requested,\nitems will be repeated in the result but not more frequently than the number\nof items in the input list.\n"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Random permutation of the list of strings given in `input`.\n"
                },
                "seed": {
                    "type": "string",
                    "description": "Arbitrary string with which to seed the random number generator, in order to produce less-volatile permutations of the\nlist. **Important:** Even with an identical seed, it is not guaranteed that the same permutation will be produced across\ndifferent versions of Terraform. This argument causes the result to be *less volatile*, but not fixed for all time.\n"
                }
            },
            "required": [
                "inputs",
                "results"
            ],
            "inputProperties": {
                "inputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of strings to shuffle.\n",
                    "willReplaceOnChanges": true
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                    "willReplaceOnChanges": true
                },
                "resultCount": {
                    "type": "integer",
                    "description": "The number of results to return. Defaults to\nthe number of items in the `input` list. If fewer items are requested,\nsome elements will be excluded from the result. If more items are requested,\nitems will be repeated in the result but not more frequently than the number\nof items in the input list.\n",
                    "willReplaceOnChanges": true
                },
                "seed": {
                    "type": "string",
                    "description": "Arbitrary string with which to seed the random number generator, in order to produce less-volatile permutations of the\nlist. **Important:** Even with an identical seed, it is not guaranteed that the same permutation will be produced across\ndifferent versions of Terraform. This argument causes the result to be *less volatile*, but not fixed for all time.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "inputs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomShuffle resources.\n",
                "properties": {
                    "inputs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of strings to shuffle.\n",
                        "willReplaceOnChanges": true
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "resultCount": {
                        "type": "integer",
                        "description": "The number of results to return. Defaults to\nthe number of items in the `input` list. If fewer items are requested,\nsome elements will be excluded from the result. If more items are requested,\nitems will be repeated in the result but not more frequently than the number\nof items in the input list.\n",
                        "willReplaceOnChanges": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Random permutation of the list of strings given in `input`.\n"
                    },
                    "seed": {
                        "type": "string",
                        "description": "Arbitrary string with which to seed the random number generator, in order to produce less-volatile permutations of the\nlist. **Important:** Even with an identical seed, it is not guaranteed that the same permutation will be produced across\ndifferent versions of Terraform. This argument causes the result to be *less volatile*, but not fixed for all time.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "random:index/randomString:RandomString": {
            "description": "The resource `random.RandomString` generates a random permutation of alphanumeric\ncharacters and optionally special characters.\n\nThis resource *does* use a cryptographic random number generator.\n\nHistorically this resource's intended usage has been ambiguous as the original example\nused it in a password. For backwards compatibility it will\ncontinue to exist. For unique ids please use random_id, for sensitive\nrandom values please use random_password.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as random from \"@pulumi/random\";\n\nconst randomRandomString = new random.RandomString(\"random\", {\n    length: 16,\n    overrideSpecial: \"/@£$\",\n    special: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_random as random\n\nrandom = random.RandomString(\"random\",\n    length=16,\n    override_special=\"/@£$\",\n    special=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var random = new Random.RandomString(\"random\", new()\n    {\n        Length = 16,\n        OverrideSpecial = \"/@£$\",\n        Special = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-random/sdk/v4/go/random\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := random.NewRandomString(ctx, \"random\", \u0026random.RandomStringArgs{\n\t\t\tLength:          pulumi.Int(16),\n\t\t\tOverrideSpecial: pulumi.String(fmt.Sprintf(\"/@£$\")),\n\t\t\tSpecial:         pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomString;\nimport com.pulumi.random.RandomStringArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var random = new RandomString(\"random\", RandomStringArgs.builder()        \n            .length(16)\n            .overrideSpecial(\"/@£$\")\n            .special(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  random:\n    type: random:RandomString\n    properties:\n      length: 16\n      overrideSpecial: /@£$\n      special: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nStrings can be imported by just specifying the value of the string\n\n```sh\n $ pulumi import random:index/randomString:RandomString test test\n```\n\n ",
            "properties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n"
                },
                "length": {
                    "type": "integer",
                    "description": "The length of the string desired\n"
                },
                "lower": {
                    "type": "boolean",
                    "description": "(default true) Include lowercase alphabet characters\nin random string.\n"
                },
                "minLower": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of lowercase alphabet\ncharacters in random string.\n"
                },
                "minNumeric": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of numeric characters\nin random string.\n"
                },
                "minSpecial": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of special characters\nin random string.\n"
                },
                "minUpper": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of uppercase alphabet\ncharacters in random string.\n"
                },
                "number": {
                    "type": "boolean",
                    "description": "(default true) Include numeric characters in random\nstring.\n"
                },
                "overrideSpecial": {
                    "type": "string",
                    "description": "Supply your own list of special characters to\nuse for string generation.  This overrides the default character list in the special\nargument.  The special argument must still be set to true for any overwritten\ncharacters to be used in generation.\n"
                },
                "result": {
                    "type": "string",
                    "description": "Random string generated.\n"
                },
                "special": {
                    "type": "boolean",
                    "description": "(default true) Include special characters in random\nstring. These are `!@#$%\u0026*()-_=+[]{}\u003c\u003e:?`\n"
                },
                "upper": {
                    "type": "boolean",
                    "description": "(default true) Include uppercase alphabet characters\nin random string.\n"
                }
            },
            "required": [
                "length",
                "result"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                    "willReplaceOnChanges": true
                },
                "length": {
                    "type": "integer",
                    "description": "The length of the string desired\n",
                    "willReplaceOnChanges": true
                },
                "lower": {
                    "type": "boolean",
                    "description": "(default true) Include lowercase alphabet characters\nin random string.\n",
                    "willReplaceOnChanges": true
                },
                "minLower": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of lowercase alphabet\ncharacters in random string.\n",
                    "willReplaceOnChanges": true
                },
                "minNumeric": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of numeric characters\nin random string.\n",
                    "willReplaceOnChanges": true
                },
                "minSpecial": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of special characters\nin random string.\n",
                    "willReplaceOnChanges": true
                },
                "minUpper": {
                    "type": "integer",
                    "description": "(default 0) Minimum number of uppercase alphabet\ncharacters in random string.\n",
                    "willReplaceOnChanges": true
                },
                "number": {
                    "type": "boolean",
                    "description": "(default true) Include numeric characters in random\nstring.\n",
                    "willReplaceOnChanges": true
                },
                "overrideSpecial": {
                    "type": "string",
                    "description": "Supply your own list of special characters to\nuse for string generation.  This overrides the default character list in the special\nargument.  The special argument must still be set to true for any overwritten\ncharacters to be used in generation.\n",
                    "willReplaceOnChanges": true
                },
                "special": {
                    "type": "boolean",
                    "description": "(default true) Include special characters in random\nstring. These are `!@#$%\u0026*()-_=+[]{}\u003c\u003e:?`\n",
                    "willReplaceOnChanges": true
                },
                "upper": {
                    "type": "boolean",
                    "description": "(default true) Include uppercase alphabet characters\nin random string.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "length"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomString resources.\n",
                "properties": {
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will\ntrigger a new id to be generated. See\nthe main provider documentation for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "length": {
                        "type": "integer",
                        "description": "The length of the string desired\n",
                        "willReplaceOnChanges": true
                    },
                    "lower": {
                        "type": "boolean",
                        "description": "(default true) Include lowercase alphabet characters\nin random string.\n",
                        "willReplaceOnChanges": true
                    },
                    "minLower": {
                        "type": "integer",
                        "description": "(default 0) Minimum number of lowercase alphabet\ncharacters in random string.\n",
                        "willReplaceOnChanges": true
                    },
                    "minNumeric": {
                        "type": "integer",
                        "description": "(default 0) Minimum number of numeric characters\nin random string.\n",
                        "willReplaceOnChanges": true
                    },
                    "minSpecial": {
                        "type": "integer",
                        "description": "(default 0) Minimum number of special characters\nin random string.\n",
                        "willReplaceOnChanges": true
                    },
                    "minUpper": {
                        "type": "integer",
                        "description": "(default 0) Minimum number of uppercase alphabet\ncharacters in random string.\n",
                        "willReplaceOnChanges": true
                    },
                    "number": {
                        "type": "boolean",
                        "description": "(default true) Include numeric characters in random\nstring.\n",
                        "willReplaceOnChanges": true
                    },
                    "overrideSpecial": {
                        "type": "string",
                        "description": "Supply your own list of special characters to\nuse for string generation.  This overrides the default character list in the special\nargument.  The special argument must still be set to true for any overwritten\ncharacters to be used in generation.\n",
                        "willReplaceOnChanges": true
                    },
                    "result": {
                        "type": "string",
                        "description": "Random string generated.\n"
                    },
                    "special": {
                        "type": "boolean",
                        "description": "(default true) Include special characters in random\nstring. These are `!@#$%\u0026*()-_=+[]{}\u003c\u003e:?`\n",
                        "willReplaceOnChanges": true
                    },
                    "upper": {
                        "type": "boolean",
                        "description": "(default true) Include uppercase alphabet characters\nin random string.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "random:index/randomUuid:RandomUuid": {
            "description": "The resource `random.RandomUuid` generates random uuid string that is intended to be\nused as unique identifiers for other resources.\n\nThis resource uses the `hashicorp/go-uuid` to generate a UUID-formatted string\nfor use with services needed a unique string identifier.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThe following example shows how to generate a unique name for an Azure Resource Group.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as azure from \"@pulumi/azure\";\nimport * as random from \"@pulumi/random\";\n\nconst testRandomUuid = new random.RandomUuid(\"test\", {});\nconst testResourceGroup = new azure.core.ResourceGroup(\"test\", {\n    location: \"Central US\",\n});\n```\n```python\nimport pulumi\nimport pulumi_azure as azure\nimport pulumi_random as random\n\ntest_random_uuid = random.RandomUuid(\"testRandomUuid\")\ntest_resource_group = azure.core.ResourceGroup(\"testResourceGroup\", location=\"Central US\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Azure = Pulumi.Azure;\nusing Random = Pulumi.Random;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testRandomUuid = new Random.RandomUuid(\"testRandomUuid\");\n\n    var testResourceGroup = new Azure.Core.ResourceGroup(\"testResourceGroup\", new()\n    {\n        Location = \"Central US\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core\"\n\t\"github.com/pulumi/pulumi-random/sdk/v4/go/random\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := random.NewRandomUuid(ctx, \"testRandomUuid\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = core.NewResourceGroup(ctx, \"testResourceGroup\", \u0026core.ResourceGroupArgs{\n\t\t\tLocation: pulumi.String(\"Central US\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.random.RandomUuid;\nimport com.pulumi.azure.core.ResourceGroup;\nimport com.pulumi.azure.core.ResourceGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testRandomUuid = new RandomUuid(\"testRandomUuid\");\n\n        var testResourceGroup = new ResourceGroup(\"testResourceGroup\", ResourceGroupArgs.builder()        \n            .location(\"Central US\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testRandomUuid:\n    type: random:RandomUuid\n  testResourceGroup:\n    type: azure:core:ResourceGroup\n    properties:\n      location: Central US\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRandom UUID's can be imported. This can be used to replace a config value with a value interpolated from the random provider without experiencing diffs. Example\n\n```sh\n $ pulumi import random:index/randomUuid:RandomUuid main aabbccdd-eeff-0011-2233-445566778899\n```\n\n ",
            "properties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new uuid to be generated. See\nthe main provider documentation for more information.\n"
                },
                "result": {
                    "type": "string",
                    "description": "The generated uuid presented in string format.\n"
                }
            },
            "required": [
                "result"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will\ntrigger a new uuid to be generated. See\nthe main provider documentation for more information.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RandomUuid resources.\n",
                "properties": {
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will\ntrigger a new uuid to be generated. See\nthe main provider documentation for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "result": {
                        "type": "string",
                        "description": "The generated uuid presented in string format.\n"
                    }
                },
                "type": "object"
            }
        }
    }
}