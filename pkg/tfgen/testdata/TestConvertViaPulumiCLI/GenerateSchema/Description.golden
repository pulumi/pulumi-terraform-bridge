## Example Usage

<!--Start PulumiCodeChooser -->
```typescript
import * as pulumi from "@pulumi/pulumi";
import * as simple from "@pulumi/simple";

const aResource = new simple.Resource("a_resource", {
    renamedInput1: "hello",
    inputTwo: "true",
});
export const someOutput = aResource.result;
```
```python
import pulumi
import pulumi_simple as simple

a_resource = simple.Resource("a_resource",
    renamed_input1="hello",
    input_two="true")
pulumi.export("someOutput", a_resource.result)
```
```csharp
using System.Collections.Generic;
using System.Linq;
using Pulumi;
using Simple = Pulumi.Simple;

return await Deployment.RunAsync(() => 
{
    var aResource = new Simple.Resource("a_resource", new()
    {
        RenamedInput1 = "hello",
        InputTwo = "true",
    });

    return new Dictionary<string, object?>
    {
        ["someOutput"] = aResource.Result,
    };
});
```
```go
package main

import (
	"example.com/pulumi-simple/sdk/go/simple"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func main() {
	pulumi.Run(func(ctx *pulumi.Context) error {
		aResource, err := simple.Newresource(ctx, "a_resource", &simple.resourceArgs{
			RenamedInput1: pulumi.String("hello"),
			InputTwo:      pulumi.String("true"),
		})
		if err != nil {
			return err
		}
		ctx.Export("someOutput", aResource.Result)
		return nil
	})
}
```
```java
package generated_program;

import com.pulumi.Context;
import com.pulumi.Pulumi;
import com.pulumi.core.Output;
import com.pulumi.simple.resource;
import com.pulumi.simple.resourceArgs;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public static void main(String[] args) {
        Pulumi.run(App::stack);
    }

    public static void stack(Context ctx) {
        var aResource = new Resource("aResource", ResourceArgs.builder()
            .renamedInput1("hello")
            .inputTwo("true")
            .build());

        ctx.export("someOutput", aResource.result());
    }
}
```
```yaml
resources:
  aResource:
    type: simple:resource
    name: a_resource
    properties:
      renamedInput1: hello
      inputTwo: true
outputs:
  someOutput: ${aResource.result}
```
<!--End PulumiCodeChooser -->

##Extras
