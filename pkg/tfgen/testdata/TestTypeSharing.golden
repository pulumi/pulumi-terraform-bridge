{
  "name": "testprov",
  "attribution": "This Pulumi package is based on the [`testprov` Terraform Provider](https://github.com/terraform-providers/terraform-provider-testprov).",
  "meta": {
    "moduleFormat": "(.*)(?:/[^/]*)"
  },
  "language": {
    "nodejs": {
      "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-testprov)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-testprov` repo](/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-testprov` repo](https://github.com/terraform-providers/terraform-provider-testprov/issues).",
      "compatibility": "tfbridge20",
      "disableUnionOutputTypes": true
    },
    "python": {
      "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-testprov)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-testprov` repo](/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-testprov` repo](https://github.com/terraform-providers/terraform-provider-testprov/issues).",
      "compatibility": "tfbridge20",
      "pyproject": {}
    }
  },
  "config": {},
  "types": {
    "testprov:index/R1Sheet:R1Sheet": {
      "properties": {
        "visuals": {
          "type": "array",
          "items": {
            "$ref": "#/types/testprov:index/Visual:Visual"
          }
        }
      },
      "type": "object"
    },
    "testprov:index/R2Sheet:R2Sheet": {
      "properties": {
        "visuals": {
          "type": "array",
          "items": {
            "$ref": "#/types/testprov:index/Visual:Visual"
          }
        },
        "y": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "testprov:index/Visual:Visual": {
      "properties": {
        "barChartVisual": {
          "$ref": "#/types/testprov:index/VisualBarChartVisual:VisualBarChartVisual"
        },
        "boxPlotVisual": {
          "$ref": "#/types/testprov:index/VisualBoxPlotVisual:VisualBoxPlotVisual"
        }
      },
      "type": "object"
    },
    "testprov:index/VisualBarChartVisual:VisualBarChartVisual": {
      "properties": {
        "nest": {
          "$ref": "#/types/testprov:index/VisualBarChartVisualNest:VisualBarChartVisualNest"
        }
      },
      "type": "object"
    },
    "testprov:index/VisualBarChartVisualNest:VisualBarChartVisualNest": {
      "properties": {
        "nestedProp": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "testprov:index/VisualBoxPlotVisual:VisualBoxPlotVisual": {
      "properties": {
        "nest": {
          "$ref": "#/types/testprov:index/VisualBoxPlotVisualNest:VisualBoxPlotVisualNest"
        }
      },
      "type": "object"
    },
    "testprov:index/VisualBoxPlotVisualNest:VisualBoxPlotVisualNest": {
      "properties": {
        "nestedProp": {
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "provider": {
    "description": "The provider type for the testprov package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
  },
  "resources": {
    "testprov:index:R1": {
      "properties": {
        "sheets": {
          "type": "array",
          "items": {
            "$ref": "#/types/testprov:index/R1Sheet:R1Sheet"
          }
        }
      },
      "inputProperties": {
        "sheets": {
          "type": "array",
          "items": {
            "$ref": "#/types/testprov:index/R1Sheet:R1Sheet"
          }
        }
      },
      "stateInputs": {
        "description": "Input properties used for looking up and filtering R1 resources.\n",
        "properties": {
          "sheets": {
            "type": "array",
            "items": {
              "$ref": "#/types/testprov:index/R1Sheet:R1Sheet"
            }
          }
        },
        "type": "object"
      }
    },
    "testprov:index:R2": {
      "properties": {
        "sheets": {
          "type": "array",
          "items": {
            "$ref": "#/types/testprov:index/R2Sheet:R2Sheet"
          }
        },
        "x": {
          "type": "integer"
        }
      },
      "inputProperties": {
        "sheets": {
          "type": "array",
          "items": {
            "$ref": "#/types/testprov:index/R2Sheet:R2Sheet"
          }
        },
        "x": {
          "type": "integer"
        }
      },
      "stateInputs": {
        "description": "Input properties used for looking up and filtering R2 resources.\n",
        "properties": {
          "sheets": {
            "type": "array",
            "items": {
              "$ref": "#/types/testprov:index/R2Sheet:R2Sheet"
            }
          },
          "x": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  }
}