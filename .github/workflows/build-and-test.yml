name: Build and Test

on:
  workflow_call:
    inputs: {}
    secrets:
      CODECOV_TOKEN:
        required: false
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOTAL_SHARDS: 15

jobs:
  test:
    strategy:
      matrix:
        # To avoid depending on features introduced in newer golang versions, we need to
        # test our minimum supported golang versions.
        #
        # When we decide to bump our minimum go version, we need to remember to bump the
        # go version in our go.mod files.
        go-version: [1.22.x, 1.23.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
        feature-flags: ["DEFAULT", "PULUMI_TF_BRIDGE_ACCURATE_BRIDGE_PREVIEW"]
        shard: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
        exclude:
          - platform: windows-latest
            feature-flags: "PULUMI_TF_BRIDGE_ACCURATE_BRIDGE_PREVIEW"
          - platform: macos-latest
            feature-flags: "PULUMI_TF_BRIDGE_ACCURATE_BRIDGE_PREVIEW"
          - platform: windows-latest
            shard: 1
          - platform: windows-latest
            shard: 2
          - platform: windows-latest
            shard: 3
          - platform: windows-latest
            shard: 4
          - platform: windows-latest
            shard: 5
          - platform: windows-latest
            shard: 6
          - platform: windows-latest
            shard: 7
          - platform: windows-latest
            shard: 8
          - platform: windows-latest
            shard: 9
          - platform: windows-latest
            shard: 10
          - platform: windows-latest
            shard: 11
          - platform: windows-latest
            shard: 12
          - platform: windows-latest
            shard: 13
          - platform: windows-latest
            shard: 14
          - platform: macos-latest
            shard: 1
          - platform: macos-latest
            shard: 2
          - platform: macos-latest
            shard: 3
          - platform: macos-latest
            shard: 4
          - platform: macos-latest
            shard: 5
          - platform: macos-latest
            shard: 6
          - platform: macos-latest
            shard: 7
          - platform: macos-latest
            shard: 8
          - platform: macos-latest
            shard: 9
          - platform: macos-latest
            shard: 10
          - platform: macos-latest
            shard: 11
          - platform: macos-latest
            shard: 12
          - platform: macos-latest
            shard: 13
          - platform: macos-latest
            shard: 14
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install pulumi
        uses: pulumi/actions@v5
        with:
          pulumi-version: dev
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Check out source code
        uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: |
            **/go.sum
          # disable caching on windows because it's very slow
          cache: ${{ matrix.platform != 'windows-latest' }}
      - name: export feature flags
        run: echo ${{ matrix.feature-flags }}=true >> $GITHUB_ENV
        if: ${{ matrix.platform != 'windows-latest' && matrix.feature-flags != 'DEFAULT' }}
      - name: export feature flags
        run: echo ${{ matrix.feature-flags }}=true >> $env:GITHUB_ENV
        if: ${{ matrix.platform == 'windows-latest' && matrix.feature-flags != 'DEFAULT' }}
      - name: Build
        run: make build
      - name: Build PF
        run: cd pkg/pf && make build
      - name: Shard tests
        run: echo "SHARD_CMD=$(go run github.com/VenelinMartinov/sharder@9d09afeb1c053b4a0263fbaa5c3c9da1ca2d10e7 --total ${{ env.TOTAL_SHARDS }} --index ${{ matrix.shard }} --output testoutput.txt --format make)" >> $GITHUB_ENV
        if: ${{ matrix.platform == 'ubuntu-latest' }}
      - run: echo "$SHARD_CMD"
        if: ${{ matrix.platform == 'ubuntu-latest' }}
      - name: Test
        run: make VERBOSE=true test_shard
        if: ${{ matrix.platform == 'ubuntu-latest' }}
      - name: Test
        run: make test
        if: ${{ matrix.platform != 'ubuntu-latest' }}
      - name: Upload coverage reports to Codecov
        # If we have a CODECOV_TOKEN secret, then we upload it to get a coverage report.
        #
        # Community contributors do not have access to the CODECOV_TOKEN, so we just skip
        # this step.
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
          cache-dependency-path: |
            **/go.sum
      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          skip-cache: true
          version: v1.62
      - name: Lint
        run: make lint
